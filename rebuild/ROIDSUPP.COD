;	Static Name Aliases
;
;	$S1355_szIni	EQU	szIni
;	$S1356_szLicense	EQU	szLicense
;	$S1357_szDrawDelay	EQU	szDrawDelay
;	$S1358_szMax	EQU	szMax
;	$S1359_szX	EQU	szX
;	$S1360_szY	EQU	szY
;	$S1361_szW	EQU	szW
;	$S1362_szH	EQU	szH
;	$S1363_szBW	EQU	szBW
;	$S1364_szPalette	EQU	szPalette
;	$S1365_szKeys	EQU	szKeys
;	$S1366_szShield	EQU	szShield
;	$S1367_szClockwise	EQU	szClockwise
;	$S1368_szCtrClockwise	EQU	szCtrClockwise
;	$S1369_szThrust	EQU	szThrust
;	$S1370_szRevThrust	EQU	szRevThrust
;	$S1371_szFire	EQU	szFire
;	$S1372_szBomb	EQU	szBomb
;	$S1373_szHi	EQU	szHi
;	$S1374_szColorName	EQU	szColorName
;	$S1391_dwColors	EQU	dwColors
	TITLE   ROIDSUPP.C
	.8087
INCLUDELIB	MLIBCE
ROIDSUPP_TEXT	SEGMENT  WORD PUBLIC 'CODE'
ROIDSUPP_TEXT	ENDS
_DATA	SEGMENT  WORD PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT  WORD PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT  WORD PUBLIC 'BSS'
_BSS	ENDS
DGROUP	GROUP	CONST, _BSS, _DATA
	ASSUME DS: DGROUP, SS: DGROUP
PUBLIC  _LetterPart
PUBLIC  _szNumberDesc
PUBLIC  _szLetterDesc
EXTRN	MESSAGEBOX:FAR
EXTRN	MESSAGEBEEP:FAR
EXTRN	GETDEVICECAPS:FAR
EXTRN	ISICONIC:FAR
EXTRN	LOADCURSOR:FAR
EXTRN	CHANGEMENU:FAR
EXTRN	ISZOOMED:FAR
EXTRN	CREATEIC:FAR
EXTRN	LOADSTRING:FAR
EXTRN	DELETEDC:FAR
EXTRN	GETSYSTEMMENU:FAR
EXTRN	DIALOGBOX:FAR
EXTRN	GETPRIVATEPROFILEINT:FAR
EXTRN	CREATEPALETTE:FAR
EXTRN	GETPRIVATEPROFILESTRING:FAR
EXTRN	WRITEPRIVATEPROFILESTRING:FAR
EXTRN	ENDDIALOG:FAR
EXTRN	SETDLGITEMTEXT:FAR
EXTRN	_wsprintf:FAR
EXTRN	UPDATEWINDOW:FAR
EXTRN	REGISTERCLASS:FAR
EXTRN	HYPEROIDWNDPROC:FAR
EXTRN	CREATEWINDOW:FAR
EXTRN	CREATELETTER:FAR
EXTRN	SHOWWINDOW:FAR
EXTRN	_strlen:FAR
EXTRN	MAKEPROCINSTANCE:FAR
EXTRN	FREEPROCINSTANCE:FAR
EXTRN	_atoi:FAR
EXTRN	_atol:FAR
EXTRN	GETWINDOWRECT:FAR
EXTRN	_szAppName:BYTE
EXTRN	_hAppInst:WORD
EXTRN	_bBW:WORD
EXTRN	_nDrawDelay:WORD
EXTRN	_vkShld:WORD
EXTRN	_vkClkw:WORD
EXTRN	_vkCtrClkw:WORD
EXTRN	_vkThrst:WORD
EXTRN	_vkRvThrst:WORD
EXTRN	_vkFire:WORD
EXTRN	_vkBomb:WORD
EXTRN	_lHighScore:DWORD
_BSS      SEGMENT
COMM NEAR	PLOCALHEAP:	BYTE:	 2
_BSS      ENDS
_DATA      SEGMENT
$SG1318	DB	'cakmck',  00H
$SG1319	DB	'dbl',  00H
$SG1320	DB	'abekm',  00H
$SG1321	DB	'abegjlk',  00H
$SG1322	DB	'mcfh',  00H
$SG1323	DB	'cbfgjlk',  00H
$SG1324	DB	'bdiljgi',  00H
$SG1325	DB	'acgl',  00H
$SG1326	DB	'bdjlieb',  00H
$SG1327	DB	'ljebdge',  00H
$SG1329	DB	'kdbemhf',  00H
$SG1330	DB	'kabegjlk',  00H
$SG1331	DB	'cbflm',  00H
$SG1332	DB	'kabejlk',  00H
$SG1333	DB	'cafgfkm',  00H
$SG1334	DB	'cafgfk',  00H
$SG1335	DB	'bdiljhg',  00H
$SG1336	DB	'kafhcm',  00H
$SG1337	DB	'bl',  00H
$SG1338	DB	'cjli',  00H
$SG1339	DB	'akcgm',  00H
$SG1340	DB	'akm',  00H
$SG1341	DB	'kagcm',  00H
$SG1342	DB	'kamc',  00H
$SG1343	DB	'bdiljeb',  00H
$SG1344	DB	'kabegf',  00H
$SG1345	DB	'mlidbejl',  00H
$SG1346	DB	'kabegfgm',  00H
$SG1347	DB	'ebdjli',  00H
$SG1348	DB	'lbac',  00H
$SG1349	DB	'ailjc',  00H
$SG1350	DB	'alc',  00H
$SG1351	DB	'akgmc',  00H
$SG1352	DB	'amgkc',  00H
$SG1353	DB	'aglgc',  00H
$SG1354	DB	'ackm',  00H
$SG1375	DB	'Black',  00H
$SG1376	DB	'DkGrey',  00H
$SG1377	DB	'Grey',  00H
$SG1378	DB	'White',  00H
$SG1379	DB	'DkRed',  00H
$SG1380	DB	'Red',  00H
$SG1381	DB	'DkGreen',  00H
$SG1382	DB	'Green',  00H
$SG1383	DB	'DkBlue',  00H
$SG1384	DB	'Blue',  00H
$SG1385	DB	'DkYellow',  00H
$SG1386	DB	'Yellow',  00H
$SG1387	DB	'DkCyan',  00H
$SG1388	DB	'Cyan',  00H
$SG1389	DB	'DkMagenta',  00H
$SG1390	DB	'Magenta',  00H
	ORG	$+355
$SG1428	DB	'DISPLAY',  00H
$SG1439	DB	00H
$SG1479	DB	'0',  00H
$SG1483	DB	'Hyperoid License',  00H
$SG1484	DB	'This program is free software; you can redistribute it and/o'
	DB	'r modify it under the terms of the GNU General Public Licens'
	DB	'e as published by the Free Software Foundation; either versi'
	DB	'on 1, or (at your option) any later version. ',  0dH,  0aH,  0dH
	DB	0aH, 'This program is distributed in the hope that it will b'
	DB	'e useful, but WITHOUT ANY WARRANTY; without even the implied'
	DB	' warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PUR'
	DB	'POSE.  See the GNU General Public License for more details. '
	DB	0dH,  0aH,  0dH,  0aH, 'You should have received a copy of t'
	DB	'he GNU General Public License along with this program; if no'
	DB	't, write to the Free Software Foundation, Inc., 675 Mass Ave'
	DB	', Cambridge, MA 02139, USA. ',  00H
$SG1485	DB	'1',  00H
$SG1491	DB	'%lu',  00H
$SG1494	DB	'1',  00H
$SG1496	DB	'%d',  00H
$SG1497	DB	'%d',  00H
$SG1498	DB	'%d',  00H
$SG1499	DB	'%d',  00H
$SG1503	DB	'Hyperoid help',  00H
$SG1504	DB	'The following keys control your ship:',  0dH,  0aH,  0dH,  0aH
	DB	'  Left, Right Arrow .... spin left or right',  0dH,  0aH, ' '
	DB	' Down, Up Arrow ..... forward or reverse thrust',  0dH,  0aH
	DB	'  Space Bar .............. fire!',  0dH,  0aH, '  Tab ......'
	DB	'................... shields',  0dH,  0aH, '  S .............'
	DB	'................ smartbomb',  0dH,  0aH, '  Esc ............'
	DB	'............. pause/boss key',  0dH,  0aH,  0dH,  0aH, 'Note'
	DB	': You have 3 lives, unlimited fuel and firepower, 3 shields '
	DB	'and 3 smartbombs. Your ship gets darker when you lose a life'
	DB	', but you keep on playing (unless you hit an asteroid). You '
	DB	'get an extra life every 100,000 points. When you lose the ga'
	DB	'me, you start over immediately and can finish off the curren'
	DB	't level (which should now be 0) before starting over at leve'
	DB	'l 1 (There is no waiting around between games).',  00H
$SG1505	DB	'Hyperoid.ini help',  00H
$SG1506	DB	'The HYPEROID.INI file can be created/modified to change defa'
	DB	'ult settings in Hyperoid. Here are some of the items you can'
	DB	' set:',  0dH,  0aH,  0dH,  0aH, '[Hyperoid]',  0dH,  0aH, 'M'
	DB	'ax=<0/1>',  0dH,  0aH, '{X,Y,W,H}=<n>',  0dH,  0aH, 'Mono=<0'
	DB	'/1>',  0dH,  0aH, 'DrawDelay=<ms> ;microseconds/frame',  0dH
	DB	0aH,  0dH,  0aH, '[Palette]',  0dH,  0aH, '{Black,DkGrey,Gre'
	DB	'y,White,',  0dH,  0aH, ' DkRed,Red,DkGreen,Green,DkBlue,Blue'
	DB	',',  0dH,  0aH, ' DkYellow,Yellow,DkCyan,Cyan,',  0dH,  0aH, ' '
	DB	'DkMagenta,Magenta}=<r>,<g>,<b>',  0dH,  0aH,  0dH,  0aH, '[K'
	DB	'eys]',  0dH,  0aH, '{Shield,Clockwise,CtrClockwise,',  0dH,  0aH
	DB	' Thrust,RevThrust,Fire,Bomb}=<virtual keycode>',  0dH,  0aH,  0dH
	DB	0aH, 'Note: Virtual keycodes usually match the key''s ASCII '
	DB	'value.',  00H
$SG1519	DB	'High Score: %7.7lu',  00H
	ORG	$-2334
_LetterPart	DW	053H
	DW	023cH
	DW	040H
	DW	0200H
	DW	02dH
	DW	023cH
	DW	060H
	DW	016aH
	DW	020H
	DW	016aH
	DW	080H
	DW	0100H
	DW	00H
	DW	00H
	DW	00H
	DW	0100H
	DW	0a0H
	DW	016aH
	DW	0e0H
	DW	016aH
	DW	0adH
	DW	023cH
	DW	0c0H
	DW	0200H
	DW	0d3H
	DW	023cH
_szNumberDesc	DW	DGROUP:$SG1318
	DW	DGROUP:$SG1319
	DW	DGROUP:$SG1320
	DW	DGROUP:$SG1321
	DW	DGROUP:$SG1322
	DW	DGROUP:$SG1323
	DW	DGROUP:$SG1324
	DW	DGROUP:$SG1325
	DW	DGROUP:$SG1326
	DW	DGROUP:$SG1327
_szLetterDesc	DW	DGROUP:$SG1329
	DW	DGROUP:$SG1330
	DW	DGROUP:$SG1331
	DW	DGROUP:$SG1332
	DW	DGROUP:$SG1333
	DW	DGROUP:$SG1334
	DW	DGROUP:$SG1335
	DW	DGROUP:$SG1336
	DW	DGROUP:$SG1337
	DW	DGROUP:$SG1338
	DW	DGROUP:$SG1339
	DW	DGROUP:$SG1340
	DW	DGROUP:$SG1341
	DW	DGROUP:$SG1342
	DW	DGROUP:$SG1343
	DW	DGROUP:$SG1344
	DW	DGROUP:$SG1345
	DW	DGROUP:$SG1346
	DW	DGROUP:$SG1347
	DW	DGROUP:$SG1348
	DW	DGROUP:$SG1349
	DW	DGROUP:$SG1350
	DW	DGROUP:$SG1351
	DW	DGROUP:$SG1352
	DW	DGROUP:$SG1353
	DW	DGROUP:$SG1354
$S1355_szIni	DB	'HYPEROID.INI',  00H
	ORG	$+1
$S1356_szLicense	DB	'LicenseRead',  00H
$S1357_szDrawDelay	DB	'DrawDelay',  00H
$S1358_szMax	DB	'Max',  00H
$S1359_szX	DB	'X',  00H
$S1360_szY	DB	'Y',  00H
$S1361_szW	DB	'W',  00H
$S1362_szH	DB	'H',  00H
$S1363_szBW	DB	'Mono',  00H
	ORG	$+1
$S1364_szPalette	DB	'Palette',  00H
$S1365_szKeys	DB	'Keys',  00H
	ORG	$+1
$S1366_szShield	DB	'Shield',  00H
	ORG	$+1
$S1367_szClockwise	DB	'Clockwise',  00H
$S1368_szCtrClockwise	DB	'CtrClockwise',  00H
	ORG	$+1
$S1369_szThrust	DB	'Thrust',  00H
	ORG	$+1
$S1370_szRevThrust	DB	'RevThrust',  00H
$S1371_szFire	DB	'Fire',  00H
	ORG	$+1
$S1372_szBomb	DB	'Bomb',  00H
	ORG	$+1
$S1373_szHi	DB	'Hi',  00H
	ORG	$+1
$S1374_szColorName	DW	DGROUP:$SG1375
	DW	DGROUP:$SG1376
	DW	DGROUP:$SG1377
	DW	DGROUP:$SG1378
	DW	DGROUP:$SG1379
	DW	DGROUP:$SG1380
	DW	DGROUP:$SG1381
	DW	DGROUP:$SG1382
	DW	DGROUP:$SG1383
	DW	DGROUP:$SG1384
	DW	DGROUP:$SG1385
	DW	DGROUP:$SG1386
	DW	DGROUP:$SG1387
	DW	DGROUP:$SG1388
	DW	DGROUP:$SG1389
	DW	DGROUP:$SG1390
$S1391_dwColors	DD	00H
	DD	0808080H
	DD	0c0c0c0H
	DD	0ffffffH
	DD	080H
	DD	0ffH
	DD	08000H
	DD	0ff00H
	DD	0800000H
	DD	0ff0000H
	DD	08080H
	DD	0ffffH
	DD	0808000H
	DD	0ffff00H
	DD	0800080H
	DD	0ff00ffH
_DATA      ENDS
ROIDSUPP_TEXT      SEGMENT
	ASSUME	CS: ROIDSUPP_TEXT
;|*** //
; Line 1
;|*** // ROIDSUPP - hyperoid support functions
;|*** //
;|*** // Version: 1.1  Copyright (C) 1991, Hutchins Software
;|*** //      This software is licenced under the GNU General Public Licence
;|*** //      Please read the associated legal documentation
;|*** // Author: Edward Hutchins
;|*** // Revisions:
;|*** // 11/01/91 added GNU General Public License - Ed.
;|*** //
;|*** 
;|*** #include "hyperoid.h"
; Line 12
;|*** //
;|*** // HYPEROID.H - hyperoid internal header information
;|*** //
;|*** // Version: 1.1  Copyright (C) 1990,91 Hutchins Software
;|*** //      This software is licenced under the GNU General Public Licence
;|*** //      Please read the associated legal documentation
;|*** // Author: Edward Hutchins
;|*** // Revisions:
;|*** //
;|*** 
;|*** #ifndef RC_INVOKED
;|*** 
;|*** #include <stdlib.h>
; Line 13
;|*** #include <string.h>
; Line 14
;|*** #include <ctype.h>
; Line 15
;|*** #include <math.h>
; Line 16
;|*** #include <limits.h>
; Line 17
;|*** #define OEMRESOURCE
;|*** #include <winext.h>
; Line 19
;|*** #if !defined(WINEXT_H)
;|*** #define WINEXT_H
;|*** 
;|*** #if defined(__cplusplus)
;|*** extern "C" {
;|*** #endif // __cplusplus
;|*** 
;|*** //
;|*** // WINEXT.H - additional windows definitions
;|*** //
;|*** // Version 1.0  03/21/89  Copyright (C) 1989,90,91 Lantern Coroporation.
;|*** // Author: Edward Hutchins
;|*** // Status: Freeware
;|*** // Revisions:
;|*** // 06/06/90 modified HUGE to LARGE to preserve compatibility with math.h
;|*** //          also nested windows.h include to prevent modifications on the
;|*** //          actual source file - Ed.
;|*** // 10/01/90 added CONST and CONSTP,NP,LP,HP and a few comments - Ed.
;|*** // 08/28/91 added EXPORT and SEGMENT - Ed.
;|*** // 10/28/91 added DLLEXP - Ed.
;|*** // 11/02/91 posted on Compuserve - Ed.
;|*** //
;|*** 
;|*** //
;|*** // include WINDOWS.H, if needed
;|*** //
;|*** 
;|*** #if !defined(WINDOWS_H)
;|*** 	#if defined(NULL)
;|*** 		#undef NULL
;|*** 	#endif
;|*** 	#include <windows.h>
; Line 32
;|*** 
;|*** //
;|*** // defines
;|*** //
;|*** 
;|*** // you may ask, "why did he embed all these string constants instead of
;|*** // using the resource file?". Good question. The answer is: I feel better
;|*** // knowing this stuff is part of the executable, and not part of the resource
;|*** // file (which can be changed by sneaky people). Or maybe I wuz lazy.
;|*** // If you don't like it, then YOU can change it!
;|*** 
;|*** #define NL "\x0d\x0a"
;|*** 
;|*** #define HYPEROID_HELP \
;|*** "The following keys control your ship:" NL NL \
;|*** "  Left, Right Arrow .... spin left or right" NL \
;|*** "  Down, Up Arrow ..... forward or reverse thrust" NL \
;|*** "  Space Bar .............. fire!" NL \
;|*** "  Tab ......................... shields" NL \
;|*** "  S ............................. smartbomb" NL \
;|*** "  Esc ......................... pause/boss key" NL NL \
;|*** "Note: You have 3 lives, unlimited fuel and firepower, 3 shields and 3 " \
;|*** "smartbombs. Your ship gets darker when you lose a life, but you keep on " \
;|*** "playing (unless you hit an asteroid). You get an extra life every 100,000 " \
;|*** "points. When you lose the game, you start over immediately and can finish " \
;|*** "off the current level (which should now be 0) before starting over at " \
;|*** "level 1 (There is no waiting around between games)."
;|*** 
;|*** #define HYPEROID_HELP2 \
;|*** "The HYPEROID.INI file can be created/modified to change default settings " \
;|*** "in Hyperoid. Here are some of the items you can set:" NL \
;|*** NL "[Hyperoid]" NL "Max=<0/1>" NL "{X,Y,W,H}=<n>" NL "Mono=<0/1>" NL \
;|*** "DrawDelay=<ms> ;microseconds/frame" NL \
;|*** NL "[Palette]" NL \
;|*** "{Black,DkGrey,Grey,White," NL \
;|*** " DkRed,Red,DkGreen,Green,DkBlue,Blue," NL \
;|*** " DkYellow,Yellow,DkCyan,Cyan," NL \
;|*** " DkMagenta,Magenta}=<r>,<g>,<b>" NL \
;|*** NL "[Keys]" NL \
;|*** "{Shield,Clockwise,CtrClockwise," NL \
;|*** " Thrust,RevThrust,Fire,Bomb}=<virtual keycode>" NL NL \
;|*** "Note: Virtual keycodes usually match the key's ASCII value."
;|*** 
;|*** #define HYPEROID_HELPSTYLE (MB_OK | MB_ICONASTERISK)
;|*** 
;|*** // this is the part I especially want in the executable image
;|*** 
;|*** #define HYPEROID_LICENSE \
;|*** "This program is free software; you can redistribute it and/or modify " \
;|*** "it under the terms of the GNU General Public License as published by " \
;|*** "the Free Software Foundation; either version 1, or (at your option) " \
;|*** "any later version. " \
;|*** NL NL \
;|*** "This program is distributed in the hope that it will be useful, " \
;|*** "but WITHOUT ANY WARRANTY; without even the implied warranty of " \
;|*** "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the " \
;|*** "GNU General Public License for more details. " \
;|*** NL NL \
;|*** "You should have received a copy of the GNU General Public License " \
;|*** "along with this program; if not, write to the Free Software " \
;|*** "Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. "
;|*** 
;|*** //
;|*** // imports
;|*** //
;|*** 
;|*** IMPORT CHAR         szAppName[32] FROM( hyperoid.c );
;|*** IMPORT HANDLE       hAppInst FROM( hyperoid.c );
;|*** IMPORT BOOL         bBW FROM( hyperoid.c );
;|*** IMPORT INT          nDrawDelay FROM( hyperoid.c );
;|*** IMPORT INT          vkShld FROM( hyperoid.c );
;|*** IMPORT INT          vkClkw FROM( hyperoid.c );
;|*** IMPORT INT          vkCtrClkw FROM( hyperoid.c );
;|*** IMPORT INT          vkThrst FROM( hyperoid.c );
;|*** IMPORT INT          vkRvThrst FROM( hyperoid.c );
;|*** IMPORT INT          vkFire FROM( hyperoid.c );
;|*** IMPORT INT          vkBomb FROM( hyperoid.c );
;|*** IMPORT LONG         lHighScore FROM( hyperoid.c );
;|*** 
;|*** //
;|*** // globals
;|*** //
;|*** 
;|*** // these parts map to "abcdefghijklm"
;|*** GLOBAL POINT        LetterPart[] =
;|*** {
;|*** 	{83, 572}, {64, 512}, {45, 572}, {96, 362}, {32, 362},
;|*** 	{128, 256}, {0, 0}, {0, 256},
;|*** 	{160, 362}, {224, 362}, {173, 572}, {192, 512}, {211, 572}
;|*** };
;|*** // here's the vector font
;|*** GLOBAL NPSTR        szNumberDesc[] =
;|*** {
;|*** 	"cakmck",       // 0
;|*** 	"dbl",          // 1
;|*** 	"abekm",        // 2
;|*** 	"abegjlk",      // 3
;|*** 	"mcfh",         // 4
;|*** 	"cbfgjlk",      // 5
;|*** 	"bdiljgi",      // 6
;|*** 	"acgl",         // 7
;|*** 	"bdjlieb",      // 8
;|*** 	"ljebdge"       // 9
;|*** };
;|*** GLOBAL NPSTR        szLetterDesc[] =
;|*** {
;|*** 	"kdbemhf",      // A
;|*** 	"kabegjlk",     // B
;|*** 	"cbflm",        // C
;|*** 	"kabejlk",      // D
;|*** 	"cafgfkm",      // E
;|*** 	"cafgfk",       // F
;|*** 	"bdiljhg",      // G
;|*** 	"kafhcm",       // H
;|*** 	"bl",           // I
;|*** 	"cjli",         // J
;|*** 	"akcgm",        // K
;|*** 	"akm",          // L
;|*** 	"kagcm",        // M
;|*** 	"kamc",         // N
;|*** 	"bdiljeb",      // O
;|*** 	"kabegf",       // P
;|*** 	"mlidbejl",     // Q
;|*** 	"kabegfgm",     // R
;|*** 	"ebdjli",       // S
;|*** 	"lbac",         // T
;|*** 	"ailjc",        // U
;|*** 	"alc",          // V
;|*** 	"akgmc",        // W
;|*** 	"amgkc",        // X
;|*** 	"aglgc",        // Y
;|*** 	"ackm"          // Z
;|*** };
;|*** 
;|*** //
;|*** // locals
;|*** //
;|*** 
;|*** LOCAL CHAR          szIni[] = "HYPEROID.INI";
;|*** LOCAL CHAR          szLicense[] = "LicenseRead";
;|*** LOCAL CHAR          szDrawDelay[] = "DrawDelay";
;|*** LOCAL CHAR          szMax[] = "Max";
;|*** LOCAL CHAR          szX[] = "X";
;|*** LOCAL CHAR          szY[] = "Y";
;|*** LOCAL CHAR          szW[] = "W";
;|*** LOCAL CHAR          szH[] = "H";
;|*** LOCAL CHAR          szBW[] = "Mono";
;|*** LOCAL CHAR          szPalette[] = "Palette";
;|*** LOCAL CHAR          szKeys[] = "Keys";
;|*** LOCAL CHAR          szShield[] = "Shield";
;|*** LOCAL CHAR          szClockwise[] = "Clockwise";
;|*** LOCAL CHAR          szCtrClockwise[] = "CtrClockwise";
;|*** LOCAL CHAR          szThrust[] = "Thrust";
;|*** LOCAL CHAR          szRevThrust[] = "RevThrust";
;|*** LOCAL CHAR          szFire[] = "Fire";
;|*** LOCAL CHAR          szBomb[] = "Bomb";
;|*** LOCAL CHAR          szHi[] = "Hi";
;|*** LOCAL CHAR          *szColorName[] =
;|*** {
;|*** 	"Black", "DkGrey", "Grey", "White",
;|*** 	"DkRed", "Red",  "DkGreen", "Green", "DkBlue", "Blue",
;|*** 	"DkYellow", "Yellow", "DkCyan", "Cyan", "DkMagenta", "Magenta"
;|*** };
;|*** LOCAL DWORD         dwColors[] =
;|*** {
;|*** 	RGB(0,0,0), RGB(128,128,128),
;|*** 	RGB(192,192,192), RGB(255,255,255),
;|*** 	RGB(128,0,0), RGB(255,0,0),
;|*** 	RGB(0,128,0), RGB(0,255,0),
;|*** 	RGB(0,0,128), RGB(0,0,255),
;|*** 	RGB(128,128,0), RGB(255,255,0),
;|*** 	RGB(0,128,128), RGB(0,255,255),
;|*** 	RGB(128,0,128), RGB(255,0,255),
;|*** };
;|*** 
;|*** //
;|*** // PrintLetters - create letter objects from a string
;|*** //
;|*** 
;|*** VOID FAR PASCAL PrintLetters( NPSTR npszText, POINT Pos, POINT Vel,
;|*** 							  BYTE byColor, INT nSize )
;|*** {
; Line 194
	PUBLIC	PRINTLETTERS
PRINTLETTERS	PROC FAR
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	83 ec 0e 		sub	sp,14
	*** 000006	56 			push	si
;	npszText = 18
;	Pos = 14
;	Vel = 10
;	byColor = 8
;	nSize = 6
;	nLen = -10
;	nCnt = -2
;	nSpace = -8
;	nBase = -6
;	nBaseStart = -4
;	npLtr = -14
;|*** 	INT             nLen = strlen( npszText );
;|*** 	INT             nCnt = nLen;
; Line 196
	*** 000007	ff 76 12 		push	WORD PTR [bp+18]	;npszText
	*** 00000a	9a 00 00 00 00 		call	FAR PTR _strlen
	*** 00000f	83 c4 02 		add	sp,2
	*** 000012	89 46 fe 		mov	WORD PTR [bp-2],ax	;nCnt
;|*** 	INT             nSpace = nSize + nSize / 2;
; Line 197
	*** 000015	8b c8 			mov	cx,ax
	*** 000017	8b 46 06 		mov	ax,WORD PTR [bp+6]	;nSize
	*** 00001a	99 			cwd	
	*** 00001b	2b c2 			sub	ax,dx
	*** 00001d	d1 f8 			sar	ax,1
	*** 00001f	03 46 06 		add	ax,WORD PTR [bp+6]	;nSize
	*** 000022	89 46 f8 		mov	WORD PTR [bp-8],ax	;nSpace
;|*** 	INT             nBase = (nLen - 1) * nSpace;
;|*** 	INT             nBaseStart = Pos.x + nBase / 2;
; Line 199
	*** 000025	49 			dec	cx
	*** 000026	f7 e9 			imul	cx
	*** 000028	99 			cwd	
	*** 000029	2b c2 			sub	ax,dx
	*** 00002b	d1 f8 			sar	ax,1
	*** 00002d	03 46 0e 		add	ax,WORD PTR [bp+14]	;Pos
	*** 000030	89 46 fc 		mov	WORD PTR [bp-4],ax	;nBaseStart
;|*** 
;|*** 	while (nCnt--)
; Line 201
	*** 000033	eb 46 			jmp	SHORT $L20014
	*** 000035	90 			nop	
					$FC1404:
;|*** 	{
;|*** 		NPOBJ npLtr = CreateLetter( npszText[nCnt], nSize / 2 );
;|*** 		if (npLtr)
; Line 204
	*** 000036	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;nCnt
	*** 000039	8b 76 12 		mov	si,WORD PTR [bp+18]	;npszText
	*** 00003c	8a 00 			mov	al,BYTE PTR [bx][si]
	*** 00003e	50 			push	ax
	*** 00003f	8b 46 06 		mov	ax,WORD PTR [bp+6]	;nSize
	*** 000042	99 			cwd	
	*** 000043	2b c2 			sub	ax,dx
	*** 000045	d1 f8 			sar	ax,1
	*** 000047	50 			push	ax
	*** 000048	9a 00 00 00 00 		call	FAR PTR CREATELETTER
	*** 00004d	89 46 f2 		mov	WORD PTR [bp-14],ax	;npLtr
	*** 000050	0b c0 			or	ax,ax
	*** 000052	74 21 			je	$I1407
;|*** 		{
;|*** 			npLtr->Pos.x = nBaseStart;
; Line 206
	*** 000054	8b 46 fc 		mov	ax,WORD PTR [bp-4]	;nBaseStart
	*** 000057	8b 5e f2 		mov	bx,WORD PTR [bp-14]	;npLtr
	*** 00005a	89 47 04 		mov	WORD PTR [bx+4],ax
;|*** 			npLtr->Pos.y = Pos.y;
; Line 207
	*** 00005d	8b 46 10 		mov	ax,WORD PTR [bp+16]
	*** 000060	89 47 06 		mov	WORD PTR [bx+6],ax
;|*** 			npLtr->Vel = Vel;
; Line 208
	*** 000063	8b 46 0a 		mov	ax,WORD PTR [bp+10]	;Vel
	*** 000066	8b 56 0c 		mov	dx,WORD PTR [bp+12]
	*** 000069	89 47 08 		mov	WORD PTR [bx+8],ax
	*** 00006c	89 57 0a 		mov	WORD PTR [bx+10],dx
;|*** 			npLtr->byColor = byColor;
; Line 209
	*** 00006f	8a 46 08 		mov	al,BYTE PTR [bp+8]	;byColor
	*** 000072	88 47 16 		mov	BYTE PTR [bx+22],al
;|*** 		}
;|*** 		nBaseStart -= nSpace;
; Line 211
					$I1407:
	*** 000075	8b 46 f8 		mov	ax,WORD PTR [bp-8]	;nSpace
	*** 000078	29 46 fc 		sub	WORD PTR [bp-4],ax	;nBaseStart
;|*** 	}
; Line 212
					$L20014:
	*** 00007b	8b 46 fe 		mov	ax,WORD PTR [bp-2]	;nCnt
	*** 00007e	ff 4e fe 		dec	WORD PTR [bp-2]	;nCnt
	*** 000081	0b c0 			or	ax,ax
	*** 000083	75 b1 			jne	$FC1404
;|*** }
; Line 213
	*** 000085	5e 			pop	si
	*** 000086	8b e5 			mov	sp,bp
	*** 000088	5d 			pop	bp
	*** 000089	ca 0e 00 		ret	14

PRINTLETTERS	ENDP
;|*** 
;|*** //
;|*** // SpinLetters - spin letter objects away from center for effect
;|*** //
;|*** 
;|*** VOID FAR PASCAL SpinLetters( NPSTR npszText, POINT Pos, POINT Vel,
;|*** 							 BYTE byColor, INT nSize )
;|*** {
; Line 221
	PUBLIC	SPINLETTERS
SPINLETTERS	PROC FAR
	*** 00008c	55 			push	bp
	*** 00008d	8b ec 			mov	bp,sp
	*** 00008f	83 ec 14 		sub	sp,20
	*** 000092	56 			push	si
;	npszText = 18
;	Pos = 14
;	Vel = 10
;	byColor = 8
;	nSize = 6
;	nLen = -10
;	nCnt = -2
;	nSpace = -8
;	nBase = -6
;	nBaseStart = -4
;	npLtr = -14
;	nSpin = -16
;|*** 	INT             nLen = strlen( npszText );
;|*** 	INT             nCnt = nLen;
; Line 223
	*** 000093	ff 76 12 		push	WORD PTR [bp+18]	;npszText
	*** 000096	9a 00 00 00 00 		call	FAR PTR _strlen
	*** 00009b	83 c4 02 		add	sp,2
	*** 00009e	89 46 f6 		mov	WORD PTR [bp-10],ax	;nLen
	*** 0000a1	89 46 fe 		mov	WORD PTR [bp-2],ax	;nCnt
;|*** 	INT             nSpace = nSize + nSize / 2;
; Line 224
	*** 0000a4	8b 46 06 		mov	ax,WORD PTR [bp+6]	;nSize
	*** 0000a7	99 			cwd	
	*** 0000a8	2b c2 			sub	ax,dx
	*** 0000aa	d1 f8 			sar	ax,1
	*** 0000ac	03 46 06 		add	ax,WORD PTR [bp+6]	;nSize
	*** 0000af	89 46 f8 		mov	WORD PTR [bp-8],ax	;nSpace
;|*** 	INT             nBase = (nLen - 1) * nSpace;
;|*** 	INT             nBaseStart = Pos.x + nBase / 2;
; Line 226
	*** 0000b2	8b 4e f6 		mov	cx,WORD PTR [bp-10]	;nLen
	*** 0000b5	49 			dec	cx
	*** 0000b6	f7 e9 			imul	cx
	*** 0000b8	99 			cwd	
	*** 0000b9	2b c2 			sub	ax,dx
	*** 0000bb	d1 f8 			sar	ax,1
	*** 0000bd	03 46 0e 		add	ax,WORD PTR [bp+14]	;Pos
	*** 0000c0	89 46 fc 		mov	WORD PTR [bp-4],ax	;nBaseStart
	*** 0000c3	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;nLen
	*** 0000c6	99 			cwd	
	*** 0000c7	2b c2 			sub	ax,dx
	*** 0000c9	d1 f8 			sar	ax,1
	*** 0000cb	2b 46 f6 		sub	ax,WORD PTR [bp-10]	;nLen
	*** 0000ce	f7 d8 			neg	ax
	*** 0000d0	8b c8 			mov	cx,ax
	*** 0000d2	d1 e0 			shl	ax,1
	*** 0000d4	89 46 ee 		mov	WORD PTR [bp-18],ax
	*** 0000d7	b0 05 			mov	al,5
	*** 0000d9	91 			xchg	cx,ax
	*** 0000da	d3 e0 			shl	ax,cl
	*** 0000dc	89 46 ec 		mov	WORD PTR [bp-20],ax
;|*** 
;|*** 	while (nCnt--)
; Line 228
	*** 0000df	eb 54 			jmp	SHORT $L20015
	*** 0000e1	90 			nop	
					$FC1420:
;|*** 	{
;|*** 		NPOBJ npLtr = CreateLetter( npszText[nCnt], nSize / 2 );
;|*** 		if (npLtr)
; Line 231
	*** 0000e2	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;nCnt
	*** 0000e5	8b 76 12 		mov	si,WORD PTR [bp+18]	;npszText
	*** 0000e8	8a 00 			mov	al,BYTE PTR [bx][si]
	*** 0000ea	50 			push	ax
	*** 0000eb	8b 46 06 		mov	ax,WORD PTR [bp+6]	;nSize
	*** 0000ee	99 			cwd	
	*** 0000ef	2b c2 			sub	ax,dx
	*** 0000f1	d1 f8 			sar	ax,1
	*** 0000f3	50 			push	ax
	*** 0000f4	9a 00 00 00 00 		call	FAR PTR CREATELETTER
	*** 0000f9	89 46 f2 		mov	WORD PTR [bp-14],ax	;npLtr
	*** 0000fc	0b c0 			or	ax,ax
	*** 0000fe	74 2f 			je	$I1423
;|*** 		{
;|*** 			INT nSpin = (nCnt - nLen / 2) * 2;
;|*** 			npLtr->Pos.x = nBaseStart;
; Line 234
	*** 000100	8b 46 fc 		mov	ax,WORD PTR [bp-4]	;nBaseStart
	*** 000103	8b 5e f2 		mov	bx,WORD PTR [bp-14]	;npLtr
	*** 000106	89 47 04 		mov	WORD PTR [bx+4],ax
;|*** 			npLtr->Pos.y = Pos.y;
; Line 235
	*** 000109	8b 46 10 		mov	ax,WORD PTR [bp+16]
	*** 00010c	89 47 06 		mov	WORD PTR [bx+6],ax
;|*** 			npLtr->Vel = Vel;
; Line 236
	*** 00010f	8b 46 0a 		mov	ax,WORD PTR [bp+10]	;Vel
	*** 000112	8b 56 0c 		mov	dx,WORD PTR [bp+12]
	*** 000115	89 47 08 		mov	WORD PTR [bx+8],ax
	*** 000118	89 57 0a 		mov	WORD PTR [bx+10],dx
;|*** 			npLtr->Vel.x += nSpin * 16;
; Line 237
	*** 00011b	8b 46 ec 		mov	ax,WORD PTR [bp-20]
	*** 00011e	01 47 08 		add	WORD PTR [bx+8],ax
;|*** 			npLtr->nSpin = -nSpin;
; Line 238
	*** 000121	8b 46 ee 		mov	ax,WORD PTR [bp-18]
	*** 000124	f7 d8 			neg	ax
	*** 000126	89 47 10 		mov	WORD PTR [bx+16],ax
;|*** 			npLtr->byColor = byColor;
; Line 239
	*** 000129	8a 46 08 		mov	al,BYTE PTR [bp+8]	;byColor
	*** 00012c	88 47 16 		mov	BYTE PTR [bx+22],al
;|*** 		}
;|*** 		nBaseStart -= nSpace;
; Line 241
					$I1423:
	*** 00012f	8b 46 f8 		mov	ax,WORD PTR [bp-8]	;nSpace
	*** 000132	29 46 fc 		sub	WORD PTR [bp-4],ax	;nBaseStart
;|*** 	}
; Line 242
					$L20015:
	*** 000135	83 6e ee 02 		sub	WORD PTR [bp-18],2
	*** 000139	83 6e ec 20 		sub	WORD PTR [bp-20],32
	*** 00013d	8b 46 fe 		mov	ax,WORD PTR [bp-2]	;nCnt
	*** 000140	ff 4e fe 		dec	WORD PTR [bp-2]	;nCnt
	*** 000143	0b c0 			or	ax,ax
	*** 000145	75 9b 			jne	$FC1420
;|*** }
; Line 243
	*** 000147	5e 			pop	si
	*** 000148	8b e5 			mov	sp,bp
	*** 00014a	5d 			pop	bp
	*** 00014b	ca 0e 00 		ret	14

SPINLETTERS	ENDP
;|*** 
;|*** //
;|*** // CreateHyperoidPalette - create a logical palette
;|*** //
;|*** 
;|*** HPALETTE FAR PASCAL CreateHyperoidPalette( VOID )
;|*** {
; Line 250
	PUBLIC	CREATEHYPEROIDPALETTE
CREATEHYPEROIDPALETTE	PROC FAR
	*** 00014e	55 			push	bp
	*** 00014f	8b ec 			mov	bp,sp
	*** 000151	81 ec 80 00 		sub	sp,128
	*** 000155	56 			push	si
;	hPalette = -6
;	hIC = -4
;	t = -2
;	Pal = -78
;	npLogPalette = -80
;	dwColor = -116
;	szBuff = -112
;	r = -122
;	g = -124
;	b = -120
;	npBuff = -118
;|*** 	HPALETTE        hPalette;
;|*** 	HDC             hIC = CreateIC( "DISPLAY", NULL, NULL, NULL );
; Line 252
	*** 000156	b8 b8 02 		mov	ax,OFFSET DGROUP:$SG1428
	*** 000159	1e 			push	ds
	*** 00015a	50 			push	ax
	*** 00015b	2b c0 			sub	ax,ax
	*** 00015d	50 			push	ax
	*** 00015e	50 			push	ax
	*** 00015f	50 			push	ax
	*** 000160	50 			push	ax
	*** 000161	50 			push	ax
	*** 000162	50 			push	ax
	*** 000163	9a 00 00 00 00 		call	FAR PTR CREATEIC
	*** 000168	89 46 fc 		mov	WORD PTR [bp-4],ax	;hIC
;|*** 	INT             t;
;|*** 	PALETTEENTRY    Pal[PALETTE_SIZE + 2];
;|*** 	NPLOGPALETTE    npLogPalette = (NPLOGPALETTE)Pal;
; Line 255
	*** 00016b	8d 46 b2 		lea	ax,WORD PTR [bp-78]	;Pal
	*** 00016e	89 46 b0 		mov	WORD PTR [bp-80],ax	;npLogPalette
;|*** 
;|*** 	// are we forced into using b&w?
;|*** 	bBW = FALSE;
; Line 258
	*** 000171	c7 06 00 00 00 00 	mov	WORD PTR _bBW,0
;|*** 	if (GetDeviceCaps( hIC, NUMCOLORS ) < 8) bBW = TRUE;
; Line 259
	*** 000177	ff 76 fc 		push	WORD PTR [bp-4]	;hIC
	*** 00017a	b8 18 00 		mov	ax,24
	*** 00017d	50 			push	ax
	*** 00017e	9a 00 00 00 00 		call	FAR PTR GETDEVICECAPS
	*** 000183	3d 08 00 		cmp	ax,8
	*** 000186	7d 06 			jge	$I1432
	*** 000188	c7 06 00 00 01 00 	mov	WORD PTR _bBW,1
;|*** 	DeleteDC( hIC );
; Line 260
					$I1432:
	*** 00018e	ff 76 fc 		push	WORD PTR [bp-4]	;hIC
	*** 000191	9a 00 00 00 00 		call	FAR PTR DELETEDC
;|*** 	if (GetPrivateProfileInt( szAppName, szBW, FALSE, szIni )) bBW = TRUE;
; Line 261
	*** 000196	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000199	1e 			push	ds
	*** 00019a	50 			push	ax
	*** 00019b	b8 02 02 		mov	ax,OFFSET DGROUP:$S1363_szBW
	*** 00019e	1e 			push	ds
	*** 00019f	50 			push	ax
	*** 0001a0	2b c0 			sub	ax,ax
	*** 0001a2	50 			push	ax
	*** 0001a3	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 0001a6	1e 			push	ds
	*** 0001a7	50 			push	ax
	*** 0001a8	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 0001ad	0b c0 			or	ax,ax
	*** 0001af	74 06 			je	$I1433
	*** 0001b1	c7 06 00 00 01 00 	mov	WORD PTR _bBW,1
;|*** 
;|*** 	npLogPalette->palVersion = 0x0300;
; Line 263
					$I1433:
	*** 0001b7	c7 46 b2 00 03 		mov	WORD PTR [bp-78],768	;Pal
;|*** 	npLogPalette->palNumEntries = PALETTE_SIZE;
; Line 264
	*** 0001bc	c7 46 b4 10 00 		mov	WORD PTR [bp-76],16
	*** 0001c1	c7 46 82 00 00 		mov	WORD PTR [bp-126],0
	*** 0001c6	c7 46 80 58 02 		mov	WORD PTR [bp-128],OFFSET DGROUP:$S1374_szColorName
;|*** 
;|*** 	for (t = 0; t < PALETTE_SIZE; ++t)
; Line 266
					$F1434:
;|*** 	{
;|*** 		DWORD           dwColor = dwColors[t];
; Line 268
	*** 0001cb	8b 5e 82 		mov	bx,WORD PTR [bp-126]
	*** 0001ce	8b 87 78 02 		mov	ax,WORD PTR $S1391_dwColors[bx]
	*** 0001d2	8b 97 7a 02 		mov	dx,WORD PTR $S1391_dwColors[bx+2]
	*** 0001d6	89 46 8c 		mov	WORD PTR [bp-116],ax	;dwColor
	*** 0001d9	89 56 8e 		mov	WORD PTR [bp-114],dx
;|*** 		CHAR            szBuff[32];
;|*** 
;|*** 		GetPrivateProfileString( szPalette, szColorName[t], "",
;|*** 								 szBuff, sizeof(szBuff), szIni );
; Line 272
	*** 0001dc	b8 08 02 		mov	ax,OFFSET DGROUP:$S1364_szPalette
	*** 0001df	1e 			push	ds
	*** 0001e0	50 			push	ax
	*** 0001e1	8b 5e 80 		mov	bx,WORD PTR [bp-128]
	*** 0001e4	1e 			push	ds
	*** 0001e5	ff 37 			push	WORD PTR [bx]
	*** 0001e7	b8 c0 02 		mov	ax,OFFSET DGROUP:$SG1439
	*** 0001ea	1e 			push	ds
	*** 0001eb	50 			push	ax
	*** 0001ec	8d 46 90 		lea	ax,WORD PTR [bp-112]	;szBuff
	*** 0001ef	16 			push	ss
	*** 0001f0	50 			push	ax
	*** 0001f1	b9 20 00 		mov	cx,32
	*** 0001f4	51 			push	cx
	*** 0001f5	b9 d2 01 		mov	cx,OFFSET DGROUP:$S1355_szIni
	*** 0001f8	1e 			push	ds
	*** 0001f9	51 			push	cx
	*** 0001fa	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILESTRING
;|*** 		if (szBuff[0])
; Line 273
	*** 0001ff	80 7e 90 00 		cmp	BYTE PTR [bp-112],0	;szBuff
	*** 000203	75 03 			jne	$JCC515
	*** 000205	e9 98 00 		jmp	$I1440
					$JCC515:
;|*** 		{
;|*** 			INT r, g, b;
;|*** 			NPSTR npBuff = szBuff;
;|*** 			r = g = b = 255;
; Line 277
	*** 000208	b8 ff 00 		mov	ax,255
	*** 00020b	89 46 88 		mov	WORD PTR [bp-120],ax	;b
	*** 00020e	89 46 84 		mov	WORD PTR [bp-124],ax	;g
;|*** 			while (*npBuff == ' ') ++npBuff;
; Line 278
	*** 000211	8d 5e 90 		lea	bx,WORD PTR [bp-112]	;szBuff
	*** 000214	89 5e 8a 		mov	WORD PTR [bp-118],bx	;npBuff
	*** 000217	80 3f 20 		cmp	BYTE PTR [bx],32
	*** 00021a	75 0b 			jne	$FB1447
					$FC1446:
	*** 00021c	ff 46 8a 		inc	WORD PTR [bp-118]	;npBuff
	*** 00021f	8b 5e 8a 		mov	bx,WORD PTR [bp-118]	;npBuff
	*** 000222	80 3f 20 		cmp	BYTE PTR [bx],32
	*** 000225	74 f5 			je	$FC1446
					$FB1447:
;|*** 			r = atoi( npBuff );
; Line 279
	*** 000227	ff 76 8a 		push	WORD PTR [bp-118]	;npBuff
	*** 00022a	9a 00 00 00 00 		call	FAR PTR _atoi
	*** 00022f	83 c4 02 		add	sp,2
	*** 000232	89 46 86 		mov	WORD PTR [bp-122],ax	;r
;|*** 			while (*npBuff && *npBuff != ',') ++npBuff;
; Line 280
	*** 000235	8b 5e 8a 		mov	bx,WORD PTR [bp-118]	;npBuff
	*** 000238	80 3f 00 		cmp	BYTE PTR [bx],0
	*** 00023b	74 10 			je	$FB1450
					$FC1449:
	*** 00023d	80 3f 2c 		cmp	BYTE PTR [bx],44
	*** 000240	74 0b 			je	$FB1450
	*** 000242	ff 46 8a 		inc	WORD PTR [bp-118]	;npBuff
	*** 000245	8b 5e 8a 		mov	bx,WORD PTR [bp-118]	;npBuff
	*** 000248	80 3f 00 		cmp	BYTE PTR [bx],0
	*** 00024b	75 f0 			jne	$FC1449
					$FB1450:
;|*** 			if (*npBuff == ',') g = atoi( ++npBuff );
; Line 281
	*** 00024d	80 3f 2c 		cmp	BYTE PTR [bx],44
	*** 000250	75 11 			jne	$L20005
	*** 000252	ff 46 8a 		inc	WORD PTR [bp-118]	;npBuff
	*** 000255	ff 76 8a 		push	WORD PTR [bp-118]	;npBuff
	*** 000258	9a 00 00 00 00 		call	FAR PTR _atoi
	*** 00025d	83 c4 02 		add	sp,2
	*** 000260	89 46 84 		mov	WORD PTR [bp-124],ax	;g
					$L20005:
;|*** 			while (*npBuff && *npBuff != ',') ++npBuff;
; Line 282
	*** 000263	8b 5e 8a 		mov	bx,WORD PTR [bp-118]	;npBuff
	*** 000266	80 3f 00 		cmp	BYTE PTR [bx],0
	*** 000269	74 10 			je	$FB1454
					$FC1453:
	*** 00026b	80 3f 2c 		cmp	BYTE PTR [bx],44
	*** 00026e	74 0b 			je	$FB1454
	*** 000270	ff 46 8a 		inc	WORD PTR [bp-118]	;npBuff
	*** 000273	8b 5e 8a 		mov	bx,WORD PTR [bp-118]	;npBuff
	*** 000276	80 3f 00 		cmp	BYTE PTR [bx],0
	*** 000279	75 f0 			jne	$FC1453
					$FB1454:
;|*** 			if (*npBuff == ',') b = atoi( ++npBuff );
; Line 283
	*** 00027b	80 3f 2c 		cmp	BYTE PTR [bx],44
	*** 00027e	75 0f 			jne	$I1455
	*** 000280	8b c3 			mov	ax,bx
	*** 000282	40 			inc	ax
	*** 000283	50 			push	ax
	*** 000284	9a 00 00 00 00 		call	FAR PTR _atoi
	*** 000289	83 c4 02 		add	sp,2
	*** 00028c	89 46 88 		mov	WORD PTR [bp-120],ax	;b
;|*** 			dwColor = RGB( r, g, b );
; Line 284
					$I1455:
	*** 00028f	8a 46 86 		mov	al,BYTE PTR [bp-122]	;r
	*** 000292	8a 66 84 		mov	ah,BYTE PTR [bp-124]	;g
	*** 000295	8a 4e 88 		mov	cl,BYTE PTR [bp-120]	;b
	*** 000298	2a ed 			sub	ch,ch
	*** 00029a	89 46 8c 		mov	WORD PTR [bp-116],ax	;dwColor
	*** 00029d	89 4e 8e 		mov	WORD PTR [bp-114],cx
;|*** 		}
;|*** 		if (bBW) dwColor = ((dwColor == RGB(0,0,0)) ? RGB(0,0,0) : RGB(255,255,255));
; Line 286
					$I1440:
	*** 0002a0	83 3e 00 00 00 		cmp	WORD PTR _bBW,0
	*** 0002a5	74 19 			je	$I1456
	*** 0002a7	8b 46 8e 		mov	ax,WORD PTR [bp-114]
	*** 0002aa	0b 46 8c 		or	ax,WORD PTR [bp-116]	;dwColor
	*** 0002ad	75 05 			jne	$L20010
	*** 0002af	2b c0 			sub	ax,ax
	*** 0002b1	99 			cwd	
	*** 0002b2	eb 06 			jmp	SHORT $L20011
					$L20010:
	*** 0002b4	b8 ff ff 		mov	ax,-1
	*** 0002b7	ba ff 00 		mov	dx,255
					$L20011:
	*** 0002ba	89 46 8c 		mov	WORD PTR [bp-116],ax	;dwColor
	*** 0002bd	89 56 8e 		mov	WORD PTR [bp-114],dx
;|*** 		npLogPalette->palPalEntry[t].peRed = GetRValue( dwColor );
; Line 287
					$I1456:
	*** 0002c0	8a 46 8c 		mov	al,BYTE PTR [bp-116]	;dwColor
	*** 0002c3	8b 76 82 		mov	si,WORD PTR [bp-126]
	*** 0002c6	88 42 b6 		mov	BYTE PTR [bp-74][si],al
;|*** 		npLogPalette->palPalEntry[t].peGreen = GetGValue( dwColor );
; Line 288
	*** 0002c9	8a 46 8d 		mov	al,BYTE PTR [bp-115]
	*** 0002cc	8b 76 82 		mov	si,WORD PTR [bp-126]
	*** 0002cf	88 42 b7 		mov	BYTE PTR [bp-73][si],al
;|*** 		npLogPalette->palPalEntry[t].peBlue = GetBValue( dwColor );
; Line 289
	*** 0002d2	8a 46 8e 		mov	al,BYTE PTR [bp-114]
	*** 0002d5	8b 76 82 		mov	si,WORD PTR [bp-126]
	*** 0002d8	88 42 b8 		mov	BYTE PTR [bp-72][si],al
;|*** 		npLogPalette->palPalEntry[t].peFlags = 0;
; Line 290
	*** 0002db	8b 76 82 		mov	si,WORD PTR [bp-126]
	*** 0002de	c6 42 b9 00 		mov	BYTE PTR [bp-71][si],0
	*** 0002e2	83 46 82 04 		add	WORD PTR [bp-126],4
	*** 0002e6	83 46 80 02 		add	WORD PTR [bp-128],2
	*** 0002ea	81 7e 80 78 02 		cmp	WORD PTR [bp-128],OFFSET DGROUP:$S1374_szColorName+32
	*** 0002ef	73 03 			jae	$JCC751
	*** 0002f1	e9 d7 fe 		jmp	$F1434
					$JCC751:
;|*** 	}
;|*** 
;|*** 	hPalette = CreatePalette( npLogPalette );
;|*** 	return( hPalette );
; Line 294
	*** 0002f4	8d 46 b2 		lea	ax,WORD PTR [bp-78]	;Pal
	*** 0002f7	1e 			push	ds
	*** 0002f8	50 			push	ax
	*** 0002f9	9a 00 00 00 00 		call	FAR PTR CREATEPALETTE
;|*** }
; Line 295
	*** 0002fe	5e 			pop	si
	*** 0002ff	8b e5 			mov	sp,bp
	*** 000301	5d 			pop	bp
	*** 000302	cb 			ret	
	*** 000303	90 			nop	

CREATEHYPEROIDPALETTE	ENDP
;|*** 
;|*** //
;|*** // CreateHyperoidClass - create the class of Hyperoid's window
;|*** //
;|*** 
;|*** BOOL FAR PASCAL CreateHyperoidClass( VOID )
;|*** {
; Line 302
	PUBLIC	CREATEHYPEROIDCLASS
CREATEHYPEROIDCLASS	PROC FAR
	*** 000304	55 			push	bp
	*** 000305	8b ec 			mov	bp,sp
	*** 000307	83 ec 1a 		sub	sp,26
;	Class = -26
;|*** 	WNDCLASS        Class;
;|*** 
;|*** 	// load the name from the resource file
;|*** 	LoadString( hAppInst, IDS_NAME, szAppName, sizeof(szAppName) );
; Line 306
	*** 00030a	ff 36 00 00 		push	WORD PTR _hAppInst
	*** 00030e	b8 64 00 		mov	ax,100
	*** 000311	50 			push	ax
	*** 000312	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000315	1e 			push	ds
	*** 000316	50 			push	ax
	*** 000317	b8 20 00 		mov	ax,32
	*** 00031a	50 			push	ax
	*** 00031b	9a 00 00 00 00 		call	FAR PTR LOADSTRING
;|*** 
;|*** 	Class.style = CS_HREDRAW | CS_VREDRAW;
; Line 308
	*** 000320	c7 46 e6 03 00 		mov	WORD PTR [bp-26],3	;Class
;|*** 	Class.lpfnWndProc = HyperoidWndProc;
; Line 309
	*** 000325	c7 46 e8 00 00 		mov	WORD PTR [bp-24],OFFSET HYPEROIDWNDPROC
	*** 00032a	c7 46 ea 00 00 		mov	WORD PTR [bp-22],SEG HYPEROIDWNDPROC
;|*** 	Class.cbClsExtra = 0;
;|*** 	Class.cbWndExtra = 0;
; Line 311
	*** 00032f	2b c0 			sub	ax,ax
	*** 000331	89 46 ec 		mov	WORD PTR [bp-20],ax
	*** 000334	89 46 ee 		mov	WORD PTR [bp-18],ax
;|*** 	Class.hInstance = hAppInst;
; Line 312
	*** 000337	a1 00 00 		mov	ax,WORD PTR _hAppInst
	*** 00033a	89 46 f0 		mov	WORD PTR [bp-16],ax
;|*** 	Class.hIcon = NULL;
;|*** 	Class.hCursor = LoadCursor( NULL, IDC_CROSS );
; Line 314
	*** 00033d	2b c0 			sub	ax,ax
	*** 00033f	89 46 f2 		mov	WORD PTR [bp-14],ax
	*** 000342	50 			push	ax
	*** 000343	b8 03 7f 		mov	ax,32515
	*** 000346	99 			cwd	
	*** 000347	52 			push	dx
	*** 000348	50 			push	ax
	*** 000349	9a 00 00 00 00 		call	FAR PTR LOADCURSOR
	*** 00034e	89 46 f4 		mov	WORD PTR [bp-12],ax
;|*** 	Class.hbrBackground = HNULL;
; Line 315
	*** 000351	c7 46 f6 00 00 		mov	WORD PTR [bp-10],0
;|*** 	Class.lpszMenuName = szAppName;
; Line 316
	*** 000356	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000359	89 46 f8 		mov	WORD PTR [bp-8],ax
	*** 00035c	8c 5e fa 		mov	WORD PTR [bp-6],ds
;|*** 	Class.lpszClassName = szAppName;
; Line 317
	*** 00035f	89 46 fc 		mov	WORD PTR [bp-4],ax
	*** 000362	8c 5e fe 		mov	WORD PTR [bp-2],ds
;|*** 
;|*** 	return( RegisterClass( &Class ) );
; Line 319
	*** 000365	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;Class
	*** 000368	16 			push	ss
	*** 000369	50 			push	ax
	*** 00036a	9a 00 00 00 00 		call	FAR PTR REGISTERCLASS
;|*** }
; Line 320
	*** 00036f	8b e5 			mov	sp,bp
	*** 000371	5d 			pop	bp
	*** 000372	cb 			ret	
	*** 000373	90 			nop	

CREATEHYPEROIDCLASS	ENDP
;|*** 
;|*** //
;|*** // SetHyperoidMenu - add Hyperoid's menu items to the system menu
;|*** //
;|*** 
;|*** VOID NEAR PASCAL SetHyperoidMenu( HWND hWnd, INT nFirstID, INT nLastID )
;|*** {
; Line 327
	PUBLIC	SETHYPEROIDMENU
SETHYPEROIDMENU	PROC NEAR
	*** 000374	55 			push	bp
	*** 000375	8b ec 			mov	bp,sp
	*** 000377	83 ec 2a 		sub	sp,42
;	hWnd = 8
;	nFirstID = 6
;	nLastID = 4
;	szMenuName = -40
;	hMenu = -42
;|*** 	CHAR            szMenuName[40];
;|*** 	HMENU           hMenu;
;|*** 
;|*** 	hMenu = GetSystemMenu( hWnd, TRUE );
;|*** 	if (hMenu == HNULL) hMenu = GetSystemMenu( hWnd, FALSE );
; Line 332
	*** 00037a	ff 76 08 		push	WORD PTR [bp+8]	;hWnd
	*** 00037d	b8 01 00 		mov	ax,1
	*** 000380	50 			push	ax
	*** 000381	9a 00 00 00 00 		call	FAR PTR GETSYSTEMMENU
	*** 000386	89 46 d6 		mov	WORD PTR [bp-42],ax	;hMenu
	*** 000389	0b c0 			or	ax,ax
	*** 00038b	75 0c 			jne	$I1465
	*** 00038d	ff 76 08 		push	WORD PTR [bp+8]	;hWnd
	*** 000390	50 			push	ax
	*** 000391	9a 00 00 00 00 		call	FAR PTR GETSYSTEMMENU
	*** 000396	89 46 d6 		mov	WORD PTR [bp-42],ax	;hMenu
;|*** 	if (hMenu == HNULL) return;
; Line 333
					$I1465:
	*** 000399	0b c0 			or	ax,ax
	*** 00039b	74 3f 			je	$EX1462
;|*** 
;|*** 	while (nFirstID <= nLastID)
; Line 335
	*** 00039d	8b 46 06 		mov	ax,WORD PTR [bp+6]	;nFirstID
	*** 0003a0	39 46 04 		cmp	WORD PTR [bp+4],ax	;nLastID
	*** 0003a3	7c 37 			jl	$EX1462
					$FC1468:
;|*** 	{
;|*** 		LoadString( hAppInst, nFirstID, szMenuName, sizeof(szMenuName) );
; Line 337
	*** 0003a5	ff 36 00 00 		push	WORD PTR _hAppInst
	*** 0003a9	ff 76 06 		push	WORD PTR [bp+6]	;nFirstID
	*** 0003ac	8d 46 d8 		lea	ax,WORD PTR [bp-40]	;szMenuName
	*** 0003af	16 			push	ss
	*** 0003b0	50 			push	ax
	*** 0003b1	b8 28 00 		mov	ax,40
	*** 0003b4	50 			push	ax
	*** 0003b5	9a 00 00 00 00 		call	FAR PTR LOADSTRING
;|*** 		ChangeMenu( hMenu, 0, szMenuName, nFirstID, MF_APPEND );
; Line 338
	*** 0003ba	ff 76 d6 		push	WORD PTR [bp-42]	;hMenu
	*** 0003bd	2b c0 			sub	ax,ax
	*** 0003bf	50 			push	ax
	*** 0003c0	8d 46 d8 		lea	ax,WORD PTR [bp-40]	;szMenuName
	*** 0003c3	16 			push	ss
	*** 0003c4	50 			push	ax
	*** 0003c5	ff 76 06 		push	WORD PTR [bp+6]	;nFirstID
	*** 0003c8	b8 00 01 		mov	ax,256
	*** 0003cb	50 			push	ax
	*** 0003cc	9a 00 00 00 00 		call	FAR PTR CHANGEMENU
;|*** 		++nFirstID;
;|*** 	}
; Line 340
	*** 0003d1	8b 46 04 		mov	ax,WORD PTR [bp+4]	;nLastID
	*** 0003d4	ff 46 06 		inc	WORD PTR [bp+6]	;nFirstID
	*** 0003d7	39 46 06 		cmp	WORD PTR [bp+6],ax	;nFirstID
	*** 0003da	7e c9 			jle	$FC1468
;|*** }
; Line 341
					$EX1462:
	*** 0003dc	8b e5 			mov	sp,bp
	*** 0003de	5d 			pop	bp
	*** 0003df	c2 06 00 		ret	6

SETHYPEROIDMENU	ENDP
;|*** 
;|*** //
;|*** // CreateHyperoidWindow - open the Hyperoid window
;|*** //
;|*** 
;|*** HWND FAR PASCAL CreateHyperoidWindow( LPSTR lpszCmd, INT nCmdShow )
;|*** {
; Line 348
	PUBLIC	CREATEHYPEROIDWINDOW
CREATEHYPEROIDWINDOW	PROC FAR
	*** 0003e2	55 			push	bp
	*** 0003e3	8b ec 			mov	bp,sp
	*** 0003e5	83 ec 2a 		sub	sp,42
;	hWnd = -34
;	x = -40
;	y = -42
;	w = -36
;	h = -38
;	szBuff = -32
;	lpszCmd = 8
;	nCmdShow = 6
;|*** 	HWND            hWnd;
;|*** 	INT             x, y, w, h;
;|*** 	CHAR            szBuff[32];
;|*** 
;|*** 	// get the highscore profile here for lack of a better place...
;|*** 	GetPrivateProfileString( szAppName, szHi, "0", szBuff, sizeof(szBuff), szIni );
; Line 354
	*** 0003e8	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 0003eb	1e 			push	ds
	*** 0003ec	50 			push	ax
	*** 0003ed	b9 54 02 		mov	cx,OFFSET DGROUP:$S1373_szHi
	*** 0003f0	1e 			push	ds
	*** 0003f1	51 			push	cx
	*** 0003f2	b9 c1 02 		mov	cx,OFFSET DGROUP:$SG1479
	*** 0003f5	1e 			push	ds
	*** 0003f6	51 			push	cx
	*** 0003f7	8d 4e e0 		lea	cx,WORD PTR [bp-32]	;szBuff
	*** 0003fa	16 			push	ss
	*** 0003fb	51 			push	cx
	*** 0003fc	ba 20 00 		mov	dx,32
	*** 0003ff	52 			push	dx
	*** 000400	ba d2 01 		mov	dx,OFFSET DGROUP:$S1355_szIni
	*** 000403	1e 			push	ds
	*** 000404	52 			push	dx
	*** 000405	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILESTRING
;|*** 	lHighScore = atol( szBuff );
; Line 355
	*** 00040a	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 00040d	50 			push	ax
	*** 00040e	9a 00 00 00 00 		call	FAR PTR _atol
	*** 000413	83 c4 02 		add	sp,2
	*** 000416	a3 00 00 		mov	WORD PTR _lHighScore,ax
	*** 000419	89 16 02 00 		mov	WORD PTR _lHighScore+2,dx
;|*** 
;|*** 	x = GetPrivateProfileInt( szAppName, szX, CW_USEDEFAULT, szIni );
; Line 357
	*** 00041d	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000420	1e 			push	ds
	*** 000421	50 			push	ax
	*** 000422	b8 fa 01 		mov	ax,OFFSET DGROUP:$S1359_szX
	*** 000425	1e 			push	ds
	*** 000426	50 			push	ax
	*** 000427	b8 00 80 		mov	ax,-32768
	*** 00042a	50 			push	ax
	*** 00042b	b9 d2 01 		mov	cx,OFFSET DGROUP:$S1355_szIni
	*** 00042e	1e 			push	ds
	*** 00042f	51 			push	cx
	*** 000430	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000435	89 46 d8 		mov	WORD PTR [bp-40],ax	;x
;|*** 	y = GetPrivateProfileInt( szAppName, szY, CW_USEDEFAULT, szIni );
; Line 358
	*** 000438	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 00043b	1e 			push	ds
	*** 00043c	50 			push	ax
	*** 00043d	b8 fc 01 		mov	ax,OFFSET DGROUP:$S1360_szY
	*** 000440	1e 			push	ds
	*** 000441	50 			push	ax
	*** 000442	b8 00 80 		mov	ax,-32768
	*** 000445	50 			push	ax
	*** 000446	b9 d2 01 		mov	cx,OFFSET DGROUP:$S1355_szIni
	*** 000449	1e 			push	ds
	*** 00044a	51 			push	cx
	*** 00044b	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000450	89 46 d6 		mov	WORD PTR [bp-42],ax	;y
;|*** 	w = GetPrivateProfileInt( szAppName, szW, CW_USEDEFAULT, szIni );
; Line 359
	*** 000453	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000456	1e 			push	ds
	*** 000457	50 			push	ax
	*** 000458	b8 fe 01 		mov	ax,OFFSET DGROUP:$S1361_szW
	*** 00045b	1e 			push	ds
	*** 00045c	50 			push	ax
	*** 00045d	b8 00 80 		mov	ax,-32768
	*** 000460	50 			push	ax
	*** 000461	b9 d2 01 		mov	cx,OFFSET DGROUP:$S1355_szIni
	*** 000464	1e 			push	ds
	*** 000465	51 			push	cx
	*** 000466	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 00046b	89 46 dc 		mov	WORD PTR [bp-36],ax	;w
;|*** 	h = GetPrivateProfileInt( szAppName, szH, CW_USEDEFAULT, szIni );
; Line 360
	*** 00046e	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000471	1e 			push	ds
	*** 000472	50 			push	ax
	*** 000473	b8 00 02 		mov	ax,OFFSET DGROUP:$S1362_szH
	*** 000476	1e 			push	ds
	*** 000477	50 			push	ax
	*** 000478	b8 00 80 		mov	ax,-32768
	*** 00047b	50 			push	ax
	*** 00047c	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 00047f	1e 			push	ds
	*** 000480	50 			push	ax
	*** 000481	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000486	89 46 da 		mov	WORD PTR [bp-38],ax	;h
;|*** 	if (GetPrivateProfileInt( szAppName, szMax, FALSE, szIni ) &&
;|*** 		nCmdShow == SW_NORMAL) nCmdShow = SW_SHOWMAXIMIZED;
; Line 362
	*** 000489	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 00048c	1e 			push	ds
	*** 00048d	50 			push	ax
	*** 00048e	b8 f6 01 		mov	ax,OFFSET DGROUP:$S1358_szMax
	*** 000491	1e 			push	ds
	*** 000492	50 			push	ax
	*** 000493	2b c0 			sub	ax,ax
	*** 000495	50 			push	ax
	*** 000496	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000499	1e 			push	ds
	*** 00049a	50 			push	ax
	*** 00049b	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 0004a0	0b c0 			or	ax,ax
	*** 0004a2	74 0b 			je	$I1480
	*** 0004a4	83 7e 06 01 		cmp	WORD PTR [bp+6],1	;nCmdShow
	*** 0004a8	75 05 			jne	$I1480
	*** 0004aa	c7 46 06 03 00 		mov	WORD PTR [bp+6],3	;nCmdShow
;|*** 
;|*** 	hWnd = CreateWindow( szAppName, szAppName, WS_OVERLAPPEDWINDOW,
; Line 364
					$I1480:
;|*** 						 x, y, w, h, HNULL, HNULL, hAppInst, NULL );
;|*** 	if (hWnd == HNULL) return( HNULL );
; Line 366
	*** 0004af	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 0004b2	1e 			push	ds
	*** 0004b3	50 			push	ax
	*** 0004b4	1e 			push	ds
	*** 0004b5	50 			push	ax
	*** 0004b6	2b c0 			sub	ax,ax
	*** 0004b8	ba cf 00 		mov	dx,207
	*** 0004bb	52 			push	dx
	*** 0004bc	50 			push	ax
	*** 0004bd	ff 76 d8 		push	WORD PTR [bp-40]	;x
	*** 0004c0	ff 76 d6 		push	WORD PTR [bp-42]	;y
	*** 0004c3	ff 76 dc 		push	WORD PTR [bp-36]	;w
	*** 0004c6	ff 76 da 		push	WORD PTR [bp-38]	;h
	*** 0004c9	50 			push	ax
	*** 0004ca	50 			push	ax
	*** 0004cb	ff 36 00 00 		push	WORD PTR _hAppInst
	*** 0004cf	2b c9 			sub	cx,cx
	*** 0004d1	51 			push	cx
	*** 0004d2	51 			push	cx
	*** 0004d3	9a 00 00 00 00 		call	FAR PTR CREATEWINDOW
	*** 0004d8	89 46 de 		mov	WORD PTR [bp-34],ax	;hWnd
	*** 0004db	0b c0 			or	ax,ax
	*** 0004dd	74 75 			je	$EX1472
;|*** 
;|*** 	ShowWindow( hWnd, nCmdShow );
; Line 368
	*** 0004df	50 			push	ax
	*** 0004e0	ff 76 06 		push	WORD PTR [bp+6]	;nCmdShow
	*** 0004e3	9a 00 00 00 00 		call	FAR PTR SHOWWINDOW
;|*** 	UpdateWindow( hWnd );
; Line 369
	*** 0004e8	ff 76 de 		push	WORD PTR [bp-34]	;hWnd
	*** 0004eb	9a 00 00 00 00 		call	FAR PTR UPDATEWINDOW
;|*** 	SetHyperoidMenu( hWnd, IDM_NEW, IDM_ABOUT );
; Line 370
	*** 0004f0	ff 76 de 		push	WORD PTR [bp-34]	;hWnd
	*** 0004f3	b8 c8 00 		mov	ax,200
	*** 0004f6	50 			push	ax
	*** 0004f7	b8 c9 00 		mov	ax,201
	*** 0004fa	50 			push	ax
	*** 0004fb	e8 76 fe 		call	SETHYPEROIDMENU
;|*** 
;|*** 	// show the license...
;|*** 	if (!GetPrivateProfileInt( szAppName, szLicense, FALSE, szIni ))
; Line 373
	*** 0004fe	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000501	1e 			push	ds
	*** 000502	50 			push	ax
	*** 000503	b8 e0 01 		mov	ax,OFFSET DGROUP:$S1356_szLicense
	*** 000506	1e 			push	ds
	*** 000507	50 			push	ax
	*** 000508	2b c0 			sub	ax,ax
	*** 00050a	50 			push	ax
	*** 00050b	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 00050e	1e 			push	ds
	*** 00050f	50 			push	ax
	*** 000510	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000515	0b c0 			or	ax,ax
	*** 000517	75 38 			jne	$I1482
;|*** 	{
;|*** 		MessageBeep( HYPEROID_HELPSTYLE );
; Line 375
	*** 000519	b8 40 00 		mov	ax,64
	*** 00051c	50 			push	ax
	*** 00051d	9a 00 00 00 00 		call	FAR PTR MESSAGEBEEP
;|*** 		MessageBox( hWnd, HYPEROID_LICENSE, "Hyperoid License", HYPEROID_HELPSTYLE );
; Line 376
	*** 000522	ff 76 de 		push	WORD PTR [bp-34]	;hWnd
	*** 000525	b8 d4 02 		mov	ax,OFFSET DGROUP:$SG1484
	*** 000528	1e 			push	ds
	*** 000529	50 			push	ax
	*** 00052a	b8 c3 02 		mov	ax,OFFSET DGROUP:$SG1483
	*** 00052d	1e 			push	ds
	*** 00052e	50 			push	ax
	*** 00052f	b8 40 00 		mov	ax,64
	*** 000532	50 			push	ax
	*** 000533	9a 00 00 00 00 		call	FAR PTR MESSAGEBOX
;|*** 		// ...and never show it again (unless they want to see it)
;|*** 		WritePrivateProfileString( szAppName, szLicense, "1", szIni );
; Line 378
	*** 000538	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 00053b	1e 			push	ds
	*** 00053c	50 			push	ax
	*** 00053d	b8 e0 01 		mov	ax,OFFSET DGROUP:$S1356_szLicense
	*** 000540	1e 			push	ds
	*** 000541	50 			push	ax
	*** 000542	b8 60 05 		mov	ax,OFFSET DGROUP:$SG1485
	*** 000545	1e 			push	ds
	*** 000546	50 			push	ax
	*** 000547	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 00054a	1e 			push	ds
	*** 00054b	50 			push	ax
	*** 00054c	9a 00 00 00 00 		call	FAR PTR WRITEPRIVATEPROFILESTRING
;|*** 	}
;|*** 
;|*** 	return( hWnd );
; Line 381
					$I1482:
	*** 000551	8b 46 de 		mov	ax,WORD PTR [bp-34]	;hWnd
;|*** }
; Line 382
					$EX1472:
	*** 000554	8b e5 			mov	sp,bp
	*** 000556	5d 			pop	bp
	*** 000557	ca 06 00 		ret	6

CREATEHYPEROIDWINDOW	ENDP
;|*** 
;|*** //
;|*** // SaveHyperoidWindowPos - write out the .ini information
;|*** //
;|*** 
;|*** VOID FAR PASCAL SaveHyperoidWindowPos( HWND hWnd )
;|*** {
; Line 389
	PUBLIC	SAVEHYPEROIDWINDOWPOS
SAVEHYPEROIDWINDOWPOS	PROC FAR
	*** 00055a	55 			push	bp
	*** 00055b	8b ec 			mov	bp,sp
	*** 00055d	83 ec 28 		sub	sp,40
;	hWnd = 6
;	rect = -40
;	szBuff = -32
;|*** 	RECT            rect;
;|*** 	CHAR            szBuff[32];
;|*** 
;|*** 	// save the highscore profile here for lack of a better place...
;|*** 	if (lHighScore)
; Line 394
	*** 000560	a1 02 00 		mov	ax,WORD PTR _lHighScore+2
	*** 000563	0b 06 00 00 		or	ax,WORD PTR _lHighScore
	*** 000567	74 33 			je	$I1490
;|*** 	{
;|*** 		wsprintf( szBuff, "%lu", lHighScore );
; Line 396
	*** 000569	ff 36 02 00 		push	WORD PTR _lHighScore+2
	*** 00056d	ff 36 00 00 		push	WORD PTR _lHighScore
	*** 000571	b8 62 05 		mov	ax,OFFSET DGROUP:$SG1491
	*** 000574	1e 			push	ds
	*** 000575	50 			push	ax
	*** 000576	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 000579	16 			push	ss
	*** 00057a	50 			push	ax
	*** 00057b	9a 00 00 00 00 		call	FAR PTR _wsprintf
	*** 000580	83 c4 0c 		add	sp,12
;|*** 		WritePrivateProfileString( szAppName, szHi, szBuff, szIni );
; Line 397
	*** 000583	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000586	1e 			push	ds
	*** 000587	50 			push	ax
	*** 000588	b8 54 02 		mov	ax,OFFSET DGROUP:$S1373_szHi
	*** 00058b	1e 			push	ds
	*** 00058c	50 			push	ax
	*** 00058d	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 000590	16 			push	ss
	*** 000591	50 			push	ax
	*** 000592	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000595	1e 			push	ds
	*** 000596	50 			push	ax
	*** 000597	9a 00 00 00 00 		call	FAR PTR WRITEPRIVATEPROFILESTRING
;|*** 	}
;|*** 
;|*** 	if (IsIconic( hWnd )) return;
; Line 400
					$I1490:
	*** 00059c	ff 76 06 		push	WORD PTR [bp+6]	;hWnd
	*** 00059f	9a 00 00 00 00 		call	FAR PTR ISICONIC
	*** 0005a4	0b c0 			or	ax,ax
	*** 0005a6	74 03 			je	$JCC1446
	*** 0005a8	e9 02 01 		jmp	$EX1487
					$JCC1446:
;|*** 	if (IsZoomed( hWnd ))
; Line 401
	*** 0005ab	ff 76 06 		push	WORD PTR [bp+6]	;hWnd
	*** 0005ae	9a 00 00 00 00 		call	FAR PTR ISZOOMED
	*** 0005b3	0b c0 			or	ax,ax
	*** 0005b5	74 11 			je	$I1493
;|*** 	{
;|*** 		WritePrivateProfileString( szAppName, szMax, "1", szIni );
; Line 403
	*** 0005b7	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 0005ba	1e 			push	ds
	*** 0005bb	50 			push	ax
	*** 0005bc	b8 f6 01 		mov	ax,OFFSET DGROUP:$S1358_szMax
	*** 0005bf	1e 			push	ds
	*** 0005c0	50 			push	ax
	*** 0005c1	b8 66 05 		mov	ax,OFFSET DGROUP:$SG1494
	*** 0005c4	1e 			push	ds
	*** 0005c5	e9 da 00 		jmp	$L20016
;|*** 		return;
;|*** 	}
;|*** 	else WritePrivateProfileString( szAppName, szMax, NULL, szIni );
; Line 406
					$I1493:
	*** 0005c8	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 0005cb	1e 			push	ds
	*** 0005cc	50 			push	ax
	*** 0005cd	b9 f6 01 		mov	cx,OFFSET DGROUP:$S1358_szMax
	*** 0005d0	1e 			push	ds
	*** 0005d1	51 			push	cx
	*** 0005d2	2b c9 			sub	cx,cx
	*** 0005d4	51 			push	cx
	*** 0005d5	51 			push	cx
	*** 0005d6	b9 d2 01 		mov	cx,OFFSET DGROUP:$S1355_szIni
	*** 0005d9	1e 			push	ds
	*** 0005da	51 			push	cx
	*** 0005db	9a 00 00 00 00 		call	FAR PTR WRITEPRIVATEPROFILESTRING
;|*** 
;|*** 	GetWindowRect( hWnd, &rect );
; Line 408
	*** 0005e0	ff 76 06 		push	WORD PTR [bp+6]	;hWnd
	*** 0005e3	8d 46 d8 		lea	ax,WORD PTR [bp-40]	;rect
	*** 0005e6	16 			push	ss
	*** 0005e7	50 			push	ax
	*** 0005e8	9a 00 00 00 00 		call	FAR PTR GETWINDOWRECT
;|*** 	wsprintf( szBuff, "%d", rect.left );
; Line 409
	*** 0005ed	ff 76 d8 		push	WORD PTR [bp-40]	;rect
	*** 0005f0	b8 68 05 		mov	ax,OFFSET DGROUP:$SG1496
	*** 0005f3	1e 			push	ds
	*** 0005f4	50 			push	ax
	*** 0005f5	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 0005f8	16 			push	ss
	*** 0005f9	50 			push	ax
	*** 0005fa	9a 00 00 00 00 		call	FAR PTR _wsprintf
	*** 0005ff	83 c4 0a 		add	sp,10
;|*** 	WritePrivateProfileString( szAppName, szX, szBuff, szIni );
; Line 410
	*** 000602	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000605	1e 			push	ds
	*** 000606	50 			push	ax
	*** 000607	b8 fa 01 		mov	ax,OFFSET DGROUP:$S1359_szX
	*** 00060a	1e 			push	ds
	*** 00060b	50 			push	ax
	*** 00060c	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 00060f	16 			push	ss
	*** 000610	50 			push	ax
	*** 000611	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000614	1e 			push	ds
	*** 000615	50 			push	ax
	*** 000616	9a 00 00 00 00 		call	FAR PTR WRITEPRIVATEPROFILESTRING
;|*** 	wsprintf( szBuff, "%d", rect.top );
; Line 411
	*** 00061b	ff 76 da 		push	WORD PTR [bp-38]
	*** 00061e	b8 6b 05 		mov	ax,OFFSET DGROUP:$SG1497
	*** 000621	1e 			push	ds
	*** 000622	50 			push	ax
	*** 000623	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 000626	16 			push	ss
	*** 000627	50 			push	ax
	*** 000628	9a 00 00 00 00 		call	FAR PTR _wsprintf
	*** 00062d	83 c4 0a 		add	sp,10
;|*** 	WritePrivateProfileString( szAppName, szY, szBuff, szIni );
; Line 412
	*** 000630	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000633	1e 			push	ds
	*** 000634	50 			push	ax
	*** 000635	b8 fc 01 		mov	ax,OFFSET DGROUP:$S1360_szY
	*** 000638	1e 			push	ds
	*** 000639	50 			push	ax
	*** 00063a	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 00063d	16 			push	ss
	*** 00063e	50 			push	ax
	*** 00063f	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000642	1e 			push	ds
	*** 000643	50 			push	ax
	*** 000644	9a 00 00 00 00 		call	FAR PTR WRITEPRIVATEPROFILESTRING
;|*** 	wsprintf( szBuff, "%d", rect.right - rect.left );
; Line 413
	*** 000649	8b 46 dc 		mov	ax,WORD PTR [bp-36]
	*** 00064c	2b 46 d8 		sub	ax,WORD PTR [bp-40]	;rect
	*** 00064f	50 			push	ax
	*** 000650	b8 6e 05 		mov	ax,OFFSET DGROUP:$SG1498
	*** 000653	1e 			push	ds
	*** 000654	50 			push	ax
	*** 000655	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 000658	16 			push	ss
	*** 000659	50 			push	ax
	*** 00065a	9a 00 00 00 00 		call	FAR PTR _wsprintf
	*** 00065f	83 c4 0a 		add	sp,10
;|*** 	WritePrivateProfileString( szAppName, szW, szBuff, szIni );
; Line 414
	*** 000662	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000665	1e 			push	ds
	*** 000666	50 			push	ax
	*** 000667	b8 fe 01 		mov	ax,OFFSET DGROUP:$S1361_szW
	*** 00066a	1e 			push	ds
	*** 00066b	50 			push	ax
	*** 00066c	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 00066f	16 			push	ss
	*** 000670	50 			push	ax
	*** 000671	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000674	1e 			push	ds
	*** 000675	50 			push	ax
	*** 000676	9a 00 00 00 00 		call	FAR PTR WRITEPRIVATEPROFILESTRING
;|*** 	wsprintf( szBuff, "%d", rect.bottom - rect.top );
; Line 415
	*** 00067b	8b 46 de 		mov	ax,WORD PTR [bp-34]
	*** 00067e	2b 46 da 		sub	ax,WORD PTR [bp-38]
	*** 000681	50 			push	ax
	*** 000682	b8 71 05 		mov	ax,OFFSET DGROUP:$SG1499
	*** 000685	1e 			push	ds
	*** 000686	50 			push	ax
	*** 000687	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 00068a	16 			push	ss
	*** 00068b	50 			push	ax
	*** 00068c	9a 00 00 00 00 		call	FAR PTR _wsprintf
	*** 000691	83 c4 0a 		add	sp,10
;|*** 	WritePrivateProfileString( szAppName, szH, szBuff, szIni );
; Line 416
	*** 000694	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 000697	1e 			push	ds
	*** 000698	50 			push	ax
	*** 000699	b8 00 02 		mov	ax,OFFSET DGROUP:$S1362_szH
	*** 00069c	1e 			push	ds
	*** 00069d	50 			push	ax
	*** 00069e	8d 46 e0 		lea	ax,WORD PTR [bp-32]	;szBuff
	*** 0006a1	16 			push	ss
					$L20016:
	*** 0006a2	50 			push	ax
	*** 0006a3	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 0006a6	1e 			push	ds
	*** 0006a7	50 			push	ax
	*** 0006a8	9a 00 00 00 00 		call	FAR PTR WRITEPRIVATEPROFILESTRING
;|*** }
; Line 417
					$EX1487:
	*** 0006ad	8b e5 			mov	sp,bp
	*** 0006af	5d 			pop	bp
	*** 0006b0	ca 02 00 		ret	2
	*** 0006b3	90 			nop	

SAVEHYPEROIDWINDOWPOS	ENDP
;|*** 
;|*** //
;|*** // GetHyperoidIni - load the ini file information
;|*** //
;|*** 
;|*** VOID FAR PASCAL GetHyperoidIni( VOID )
;|*** {
; Line 424
	PUBLIC	GETHYPEROIDINI
GETHYPEROIDINI	PROC FAR
;|*** 	nDrawDelay = GetPrivateProfileInt( szAppName, szDrawDelay, DRAW_DELAY, szIni );
; Line 425
	*** 0006b4	b8 00 00 		mov	ax,OFFSET _szAppName
	*** 0006b7	1e 			push	ds
	*** 0006b8	50 			push	ax
	*** 0006b9	b8 ec 01 		mov	ax,OFFSET DGROUP:$S1357_szDrawDelay
	*** 0006bc	1e 			push	ds
	*** 0006bd	50 			push	ax
	*** 0006be	b8 32 00 		mov	ax,50
	*** 0006c1	50 			push	ax
	*** 0006c2	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 0006c5	1e 			push	ds
	*** 0006c6	50 			push	ax
	*** 0006c7	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 0006cc	a3 00 00 		mov	WORD PTR _nDrawDelay,ax
;|*** 	vkShld = GetPrivateProfileInt( szKeys, szShield, VK_TAB, szIni );
; Line 426
	*** 0006cf	b8 10 02 		mov	ax,OFFSET DGROUP:$S1365_szKeys
	*** 0006d2	1e 			push	ds
	*** 0006d3	50 			push	ax
	*** 0006d4	b8 16 02 		mov	ax,OFFSET DGROUP:$S1366_szShield
	*** 0006d7	1e 			push	ds
	*** 0006d8	50 			push	ax
	*** 0006d9	b8 09 00 		mov	ax,9
	*** 0006dc	50 			push	ax
	*** 0006dd	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 0006e0	1e 			push	ds
	*** 0006e1	50 			push	ax
	*** 0006e2	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 0006e7	a3 00 00 		mov	WORD PTR _vkShld,ax
;|*** 	vkClkw = GetPrivateProfileInt( szKeys, szClockwise, VK_LEFT, szIni );
; Line 427
	*** 0006ea	b8 10 02 		mov	ax,OFFSET DGROUP:$S1365_szKeys
	*** 0006ed	1e 			push	ds
	*** 0006ee	50 			push	ax
	*** 0006ef	b8 1e 02 		mov	ax,OFFSET DGROUP:$S1367_szClockwise
	*** 0006f2	1e 			push	ds
	*** 0006f3	50 			push	ax
	*** 0006f4	b8 25 00 		mov	ax,37
	*** 0006f7	50 			push	ax
	*** 0006f8	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 0006fb	1e 			push	ds
	*** 0006fc	50 			push	ax
	*** 0006fd	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000702	a3 00 00 		mov	WORD PTR _vkClkw,ax
;|*** 	vkCtrClkw = GetPrivateProfileInt( szKeys, szCtrClockwise, VK_RIGHT, szIni );
; Line 428
	*** 000705	b8 10 02 		mov	ax,OFFSET DGROUP:$S1365_szKeys
	*** 000708	1e 			push	ds
	*** 000709	50 			push	ax
	*** 00070a	b8 28 02 		mov	ax,OFFSET DGROUP:$S1368_szCtrClockwise
	*** 00070d	1e 			push	ds
	*** 00070e	50 			push	ax
	*** 00070f	b8 27 00 		mov	ax,39
	*** 000712	50 			push	ax
	*** 000713	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000716	1e 			push	ds
	*** 000717	50 			push	ax
	*** 000718	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 00071d	a3 00 00 		mov	WORD PTR _vkCtrClkw,ax
;|*** 	vkThrst = GetPrivateProfileInt( szKeys, szThrust, VK_DOWN, szIni );
; Line 429
	*** 000720	b8 10 02 		mov	ax,OFFSET DGROUP:$S1365_szKeys
	*** 000723	1e 			push	ds
	*** 000724	50 			push	ax
	*** 000725	b8 36 02 		mov	ax,OFFSET DGROUP:$S1369_szThrust
	*** 000728	1e 			push	ds
	*** 000729	50 			push	ax
	*** 00072a	b8 28 00 		mov	ax,40
	*** 00072d	50 			push	ax
	*** 00072e	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000731	1e 			push	ds
	*** 000732	50 			push	ax
	*** 000733	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000738	a3 00 00 		mov	WORD PTR _vkThrst,ax
;|*** 	vkRvThrst = GetPrivateProfileInt( szKeys, szRevThrust, VK_UP, szIni );
; Line 430
	*** 00073b	b8 10 02 		mov	ax,OFFSET DGROUP:$S1365_szKeys
	*** 00073e	1e 			push	ds
	*** 00073f	50 			push	ax
	*** 000740	b8 3e 02 		mov	ax,OFFSET DGROUP:$S1370_szRevThrust
	*** 000743	1e 			push	ds
	*** 000744	50 			push	ax
	*** 000745	b8 26 00 		mov	ax,38
	*** 000748	50 			push	ax
	*** 000749	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 00074c	1e 			push	ds
	*** 00074d	50 			push	ax
	*** 00074e	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000753	a3 00 00 		mov	WORD PTR _vkRvThrst,ax
;|*** 	vkFire = GetPrivateProfileInt( szKeys, szFire, VK_SPACE, szIni );
; Line 431
	*** 000756	b8 10 02 		mov	ax,OFFSET DGROUP:$S1365_szKeys
	*** 000759	1e 			push	ds
	*** 00075a	50 			push	ax
	*** 00075b	b8 48 02 		mov	ax,OFFSET DGROUP:$S1371_szFire
	*** 00075e	1e 			push	ds
	*** 00075f	50 			push	ax
	*** 000760	b8 20 00 		mov	ax,32
	*** 000763	50 			push	ax
	*** 000764	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000767	1e 			push	ds
	*** 000768	50 			push	ax
	*** 000769	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 00076e	a3 00 00 		mov	WORD PTR _vkFire,ax
;|*** 	vkBomb = GetPrivateProfileInt( szKeys, szBomb, 'S', szIni );
; Line 432
	*** 000771	b8 10 02 		mov	ax,OFFSET DGROUP:$S1365_szKeys
	*** 000774	1e 			push	ds
	*** 000775	50 			push	ax
	*** 000776	b8 4e 02 		mov	ax,OFFSET DGROUP:$S1372_szBomb
	*** 000779	1e 			push	ds
	*** 00077a	50 			push	ax
	*** 00077b	b8 53 00 		mov	ax,83
	*** 00077e	50 			push	ax
	*** 00077f	b8 d2 01 		mov	ax,OFFSET DGROUP:$S1355_szIni
	*** 000782	1e 			push	ds
	*** 000783	50 			push	ax
	*** 000784	9a 00 00 00 00 		call	FAR PTR GETPRIVATEPROFILEINT
	*** 000789	a3 00 00 		mov	WORD PTR _vkBomb,ax
;|*** }
; Line 433
	*** 00078c	cb 			ret	
	*** 00078d	90 			nop	

GETHYPEROIDINI	ENDP
;|*** 
;|*** //
;|*** // HyperoidHelp - show help
;|*** //
;|*** 
;|*** VOID FAR PASCAL HyperoidHelp( HWND hWnd )
;|*** {
; Line 440
	PUBLIC	HYPEROIDHELP
HYPEROIDHELP	PROC FAR
	*** 00078e	55 			push	bp
	*** 00078f	8b ec 			mov	bp,sp
;	hWnd = 6
;|*** 	MessageBox( hWnd, HYPEROID_HELP, "Hyperoid help", HYPEROID_HELPSTYLE );
; Line 441
	*** 000791	ff 76 06 		push	WORD PTR [bp+6]	;hWnd
	*** 000794	b8 82 05 		mov	ax,OFFSET DGROUP:$SG1504
	*** 000797	1e 			push	ds
	*** 000798	50 			push	ax
	*** 000799	b8 74 05 		mov	ax,OFFSET DGROUP:$SG1503
	*** 00079c	1e 			push	ds
	*** 00079d	50 			push	ax
	*** 00079e	b8 40 00 		mov	ax,64
	*** 0007a1	50 			push	ax
	*** 0007a2	9a 00 00 00 00 		call	FAR PTR MESSAGEBOX
;|*** 	MessageBox( hWnd, HYPEROID_HELP2, "Hyperoid.ini help", HYPEROID_HELPSTYLE );
; Line 442
	*** 0007a7	ff 76 06 		push	WORD PTR [bp+6]	;hWnd
	*** 0007aa	b8 62 08 		mov	ax,OFFSET DGROUP:$SG1506
	*** 0007ad	1e 			push	ds
	*** 0007ae	50 			push	ax
	*** 0007af	b8 50 08 		mov	ax,OFFSET DGROUP:$SG1505
	*** 0007b2	1e 			push	ds
	*** 0007b3	50 			push	ax
	*** 0007b4	b8 40 00 		mov	ax,64
	*** 0007b7	50 			push	ax
	*** 0007b8	9a 00 00 00 00 		call	FAR PTR MESSAGEBOX
;|*** }
; Line 443
	*** 0007bd	8b e5 			mov	sp,bp
	*** 0007bf	5d 			pop	bp
	*** 0007c0	ca 02 00 		ret	2
	*** 0007c3	90 			nop	

HYPEROIDHELP	ENDP
;|*** 
;|*** //
;|*** // HyperoidAboutDlg - the about box proc
;|*** //
;|*** 
;|*** BOOL FAR PASCAL EXPORT HyperoidAboutDlg( HWND hDlg, WORD mess,
;|*** 										 WORD wParam, LONG lParam )
;|*** {
; Line 451
	PUBLIC	HYPEROIDABOUTDLG
HYPEROIDABOUTDLG	PROC FAR
	*** 0007c4	55 			push	bp
	*** 0007c5	8b ec 			mov	bp,sp
	*** 0007c7	83 ec 28 		sub	sp,40
;	hDlg = 14
;	mess = 12
;	wParam = 10
;	lParam = 6
;	szBuff = -40
;|*** 	switch (mess)
; Line 452
	*** 0007ca	8b 46 0c 		mov	ax,WORD PTR [bp+12]	;mess
;|*** 	{
;|*** 	case WM_INITDIALOG:
;|*** 		if (lHighScore)
;|*** 		{
;|*** 			CHAR szBuff[40];
;|*** 			wsprintf( szBuff, "High Score: %7.7lu", lHighScore );
;|*** 			SetDlgItemText( hDlg, IDD_A_HISCORE, szBuff );
;|*** 		}
;|*** 		break;
;|*** 
;|*** 	case WM_COMMAND:
;|*** 		switch (wParam)
;|*** 		{
;|*** 		case IDD_A_HELP:
;|*** 			HyperoidHelp( hDlg );
;|*** 			// fall through...
;|*** 		case IDOK:
;|*** 			EndDialog( hDlg, 0 );
;|*** 			break;
;|*** 
;|*** 		default:
;|*** 			return( FALSE );
;|*** 		}
;|*** 		break;
;|*** 
;|*** 	case WM_CLOSE:
;|*** 		EndDialog( hDlg, FALSE );
;|*** 		break;
;|*** 
;|*** 	default:
;|*** 		return( FALSE );
;|*** 	}
; Line 484
	*** 0007cd	2d 10 00 		sub	ax,16
	*** 0007d0	74 58 			je	$SC1526
	*** 0007d2	2d 00 01 		sub	ax,256
	*** 0007d5	74 0b 			je	$SC1516
	*** 0007d7	48 			dec	ax
	*** 0007d8	74 3e 			je	$SC1520
;|*** 		return( FALSE );
; Line 483
					$L20017:
	*** 0007da	2b c0 			sub	ax,ax
	*** 0007dc	8b e5 			mov	sp,bp
	*** 0007de	5d 			pop	bp
	*** 0007df	ca 0a 00 		ret	10
					$SC1516:
;|*** 		if (lHighScore)
; Line 455
	*** 0007e2	a1 02 00 		mov	ax,WORD PTR _lHighScore+2
	*** 0007e5	0b 06 00 00 		or	ax,WORD PTR _lHighScore
	*** 0007e9	74 4a 			je	$SB1513
;|*** 		{
;|*** 			CHAR szBuff[40];
;|*** 			wsprintf( szBuff, "High Score: %7.7lu", lHighScore );
; Line 458
	*** 0007eb	ff 36 02 00 		push	WORD PTR _lHighScore+2
	*** 0007ef	ff 36 00 00 		push	WORD PTR _lHighScore
	*** 0007f3	b8 61 0a 		mov	ax,OFFSET DGROUP:$SG1519
	*** 0007f6	1e 			push	ds
	*** 0007f7	50 			push	ax
	*** 0007f8	8d 46 d8 		lea	ax,WORD PTR [bp-40]	;szBuff
	*** 0007fb	16 			push	ss
	*** 0007fc	50 			push	ax
	*** 0007fd	9a 00 00 00 00 		call	FAR PTR _wsprintf
	*** 000802	83 c4 0c 		add	sp,12
;|*** 			SetDlgItemText( hDlg, IDD_A_HISCORE, szBuff );
; Line 459
	*** 000805	ff 76 0e 		push	WORD PTR [bp+14]	;hDlg
	*** 000808	b8 f6 01 		mov	ax,502
	*** 00080b	50 			push	ax
	*** 00080c	8d 46 d8 		lea	ax,WORD PTR [bp-40]	;szBuff
	*** 00080f	16 			push	ss
	*** 000810	50 			push	ax
	*** 000811	9a 00 00 00 00 		call	FAR PTR SETDLGITEMTEXT
;|*** 		}
;|*** 		break;
; Line 461
	*** 000816	eb 1d 			jmp	SHORT $SB1513
;|*** 
;|*** 	case WM_COMMAND:
; Line 463
					$SC1520:
;|*** 		switch (wParam)
; Line 464
	*** 000818	8b 46 0a 		mov	ax,WORD PTR [bp+10]	;wParam
;|*** 		{
;|*** 		case IDD_A_HELP:
;|*** 			HyperoidHelp( hDlg );
;|*** 			// fall through...
;|*** 		case IDOK:
;|*** 			EndDialog( hDlg, 0 );
;|*** 			break;
;|*** 
;|*** 		default:
;|*** 			return( FALSE );
;|*** 		}
; Line 475
	*** 00081b	48 			dec	ax
	*** 00081c	74 0c 			je	$SC1526
	*** 00081e	2d f4 01 		sub	ax,500
	*** 000821	75 b7 			jne	$L20017
;|*** 			HyperoidHelp( hDlg );
; Line 467
	*** 000823	ff 76 0e 		push	WORD PTR [bp+14]	;hDlg
	*** 000826	0e 			push	cs
	*** 000827	e8 00 00 		call	NEAR PTR HYPEROIDHELP
;|*** 			// fall through...
;|*** 		case IDOK:
; Line 469
					$SC1526:
;|*** 			EndDialog( hDlg, 0 );
; Line 470
	*** 00082a	ff 76 0e 		push	WORD PTR [bp+14]	;hDlg
	*** 00082d	2b c0 			sub	ax,ax
	*** 00082f	50 			push	ax
	*** 000830	9a 00 00 00 00 		call	FAR PTR ENDDIALOG
;|*** 			break;
;|*** 
;|*** 		default:
;|*** 			return( FALSE );
;|*** 		}
;|*** 		break;
;|*** 
;|*** 	case WM_CLOSE:
;|*** 		EndDialog( hDlg, FALSE );
;|*** 		break;
;|*** 
;|*** 	default:
;|*** 		return( FALSE );
;|*** 	}
; Line 484
					$SB1513:
;|*** 	return( TRUE );
; Line 485
	*** 000835	b8 01 00 		mov	ax,1
;|*** }
; Line 486
	*** 000838	8b e5 			mov	sp,bp
	*** 00083a	5d 			pop	bp
	*** 00083b	ca 0a 00 		ret	10

HYPEROIDABOUTDLG	ENDP
;|*** 
;|*** //
;|*** // AboutHyperoid - show the about box
;|*** //
;|*** 
;|*** VOID FAR PASCAL AboutHyperoid( HWND hWnd )
;|*** {
; Line 493
	PUBLIC	ABOUTHYPEROID
ABOUTHYPEROID	PROC FAR
	*** 00083e	55 			push	bp
	*** 00083f	8b ec 			mov	bp,sp
	*** 000841	83 ec 04 		sub	sp,4
;	hWnd = 6
;	lpprocAbout = -4
;|*** 	FARPROC lpprocAbout = MakeProcInstance( HyperoidAboutDlg, hAppInst );
; Line 494
	*** 000844	b8 00 00 		mov	ax,OFFSET HYPEROIDABOUTDLG
	*** 000847	ba 00 00 		mov	dx,SEG HYPEROIDABOUTDLG
	*** 00084a	52 			push	dx
	*** 00084b	50 			push	ax
	*** 00084c	ff 36 00 00 		push	WORD PTR _hAppInst
	*** 000850	9a 00 00 00 00 		call	FAR PTR MAKEPROCINSTANCE
	*** 000855	89 46 fc 		mov	WORD PTR [bp-4],ax	;lpprocAbout
	*** 000858	89 56 fe 		mov	WORD PTR [bp-2],dx
;|*** 	DialogBox( hAppInst, INTRES( IDD_ABOUT ), hWnd, lpprocAbout );
; Line 495
	*** 00085b	ff 36 00 00 		push	WORD PTR _hAppInst
	*** 00085f	b8 f4 01 		mov	ax,500
	*** 000862	99 			cwd	
	*** 000863	52 			push	dx
	*** 000864	50 			push	ax
	*** 000865	ff 76 06 		push	WORD PTR [bp+6]	;hWnd
	*** 000868	ff 76 fe 		push	WORD PTR [bp-2]
	*** 00086b	ff 76 fc 		push	WORD PTR [bp-4]	;lpprocAbout
	*** 00086e	9a 00 00 00 00 		call	FAR PTR DIALOGBOX
;|*** 	FreeProcInstance( lpprocAbout );
; Line 496
	*** 000873	ff 76 fe 		push	WORD PTR [bp-2]
	*** 000876	ff 76 fc 		push	WORD PTR [bp-4]	;lpprocAbout
	*** 000879	9a 00 00 00 00 		call	FAR PTR FREEPROCINSTANCE
;|*** }
; Line 497
	*** 00087e	8b e5 			mov	sp,bp
	*** 000880	5d 			pop	bp
	*** 000881	ca 02 00 		ret	2

ABOUTHYPEROID	ENDP
ROIDSUPP_TEXT	ENDS
END
